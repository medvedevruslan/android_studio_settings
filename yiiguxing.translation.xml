<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="1991" />
    <option name="newTranslationDialogX" value="5005" />
    <option name="newTranslationDialogY" value="1307" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Boolean internal attribute to adjust view layout based on system windows such as the status bar. If true, adjusts the padding of this view to leave space for the system windows. Will only take effect if this view is in a non-embedded activity." />
      <item value="Version 28 (intended for Android Pie and below) is the last version of the legacy support library, so we recommend that you migrate to AndroidX libraries when using Android Q and moving forward. The IDE can help with this: Refactor &gt; Migrate to AndroidX..." />
      <item value="A type which binds the views in a layout XML to fields." />
      <item value="1.0 Initial release, binary and vector drawables support. 1.1 Added support for xml drawables. 1.1.1 Fixed bugs, decrease minimal IntelliJ version. 1.1.2 Fixed icon replacement with another plugins. Fixed icon rendering for MacOS. 1.1.3 Increased icons size for MacOS, fixed vector render. 1.1.4 Fixed mipmap parsing, fixed npe. 1.1.5 Added support for Android Studio 4.1 1.1.6 Added support for SVG icons" />
      <item value="Fetched the posts from network and stored it in database. At the end, data from persistence storage is fetched and emitted." />
      <item value="@param postId Unique id of a [Post]." />
      <item value="Retrieves a post with specified [postId]." />
      <item value="This is Single source of data." />
      <item value="capability" />
      <item value="storing" />
      <item value="Singleton repository for fetching data from remote and storing it in database for offline capability. This is single source of data." />
      <item value="Abstract Activity which binds [ViewModel] [VM] and [ViewBinding] [VB]" />
      <item value="It returns [VB] which is assigned o [mViewBinding] and used in [onCreate]." />
      <item value="Network utility to detect availability or unavailability of Internet connection" />
      <item value="on Lost" />
      <item value="on Available" />
      <item value="Network Callback" />
      <item value="Connectivity Manager" />
      <item value="Provides [ViewModel] of type [VM] from [factory]." />
      <item value="Can show [Toast] from every [Activity]." />
      <item value="every" />
      <item value="Inserts [posts] into the [Post.TABLE_NAME] table. Duplicate values are replaced in the table. @param posts Posts" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty." />
      <item value="Fetches [Response] from the remote end point." />
      <item value="represents the type for database." />
      <item value="Trace" />
      <item value="Stack" />
      <item value="print Stack Trace" />
      <item value="Network error! Can`t get latest posts" />
      <item value="posts" />
      <item value="Bound" />
      <item value="Network Bound" />
      <item value="Network Bound Repository" />
      <item value="fetch latest posts from remote" />
      <item value="Internal building block for non-tailcalling flow-truncating operators" />
      <item value="represents" />
      <item value="fetch From Local" />
      <item value="Retrieves all data from persistence storage." />
      <item value="persistence" />
      <item value="persistence storage." />
      <item value="Saves retrieved from remote into the persistence storage." />
      <item value="Denotes that the annotated method should only be called on a worker thread. If the annotated element is a class, then all methods in the class should be called on a worker thread. Example: @WorkerThread protected abstract FilterResults performFiltering(CharSequence constraint)" />
      <item value="[REQUEST] represents the type for network." />
      <item value="[RESULT] represents the type for database." />
      <item value="Service to fetch Foodium posts using dummy end point [FOODIUM_API_URL]. @constructor Create empty Foodium service interface FoodiumService { @GET(&quot;DummyFoodiumApiapiposts&quot;) suspend fun getPosts(): Response&lt;List&lt;Post&gt;&gt; companion object { const val FOODIUM_API_URL = &quot;https:patilshreyas.github.io&quot; } }" />
      <item value="dummy" />
      <item value="Service to fetch Foodium posts using dummy end point [FOODIUM_API_URL]." />
      <item value="Foodium" />
      <item value="Force the lock object into a local and use that local for monitor enterexit. This ensures that the JVM can prove that locking is balanced which is a prerequisite for using fast locking implementations. See KT-48367 for details." />
      <item value="Executes the given function block while holding the monitor of the given object lock." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1848" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1848" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1667807098215" />
  </component>
</application>