<application>
  <component name="AppStorage">
    <histories>
      <item value="mounted" />
      <item value="@param type The type of files directory to return. May be {@code null} for the root of the files directory or one of the following constants for a subdirectory: {@link android.os.EnvironmentDIRECTORY_MUSIC}, {@link android.os.EnvironmentDIRECTORY_PODCASTS}, {@link android.os.EnvironmentDIRECTORY_RINGTONES}, {@link android.os.EnvironmentDIRECTORY_ALARMS}, {@link android.os.EnvironmentDIRECTORY_NOTIFICATIONS}, {@link android.os.EnvironmentDIRECTORY_PICTURES}, or {@link android.os.EnvironmentDIRECTORY_MOVIES}. @return the absolute path to application-specific directory. May return" />
      <item value="Returns the absolute path to the directory on the primary sharedexternal storage device where the application can place persistent files it owns. These files are internal to the applications, and not typically visible to the user as media. &lt;p&gt; This is like {@link getFilesDir()} in that these files will be deleted when the application is uninstalled, however there are some important differences: &lt;ul&gt; &lt;li&gt;Shared storage may not always be available, since removable media can be ejected by the user. Media state can be checked using {@link EnvironmentgetExternalStorageState(File)}. &lt;li&gt;There is no security enforced with these files. For example, any application holding {@link android.Manifest.permissionWRITE_EXTERNAL_STORAGE} can write to these files. &lt;ul&gt; &lt;p&gt; If a shared storage device is emulated (as determined by {@link EnvironmentisExternalStorageEmulated(File)}), it's contents are backed by a private user data partition, which means there is little benefit to storing data here instead of the private directories returned by {@link getFilesDir()}, etc. &lt;p&gt; Starting in {@link android.os.Build.VERSION_CODESKITKAT}, no permissions are required to read or write to the returned path; it's always accessible to the calling app. This only applies to paths generate" />
      <item value="Returns the absolute path to the directory on the primary sharedexternal storage device where the application can place persistent files it owns. These files are internal to the applications, and not typically visible to the user as media. &lt;p&gt; This is like {@link getFilesDir()} in that these files will be deleted when the application is uninstalled, however there are some important differences: &lt;ul&gt; &lt;li&gt;Shared storage may not always be available, since removable media can be ejected by the user. Media state can be checked using {@link EnvironmentgetExternalStorageState(File)}. &lt;li&gt;There is no security enforced with these files. For example, any application holding" />
      <item value="Returns absolute paths to application-specific directories on all sharedexternal storage devices where the application can place persistent files it owns. These files are internal to the application, and not typically visible to the user as media. &lt;p&gt; This is like {@link getFilesDir()} in that these files will be deleted when the application is uninstalled, however there are some important differences: &lt;ul&gt; &lt;li&gt;Shared storage may not always be available, since removable media can be ejected by the user. Media state can be checked using {@link EnvironmentgetExternalStorageState(File)}. &lt;li&gt;There is no security enforced with these files. For example, any application holding {@link android.Manifest.permissionWRITE_EXTERNAL_STORAGE} can write to these files. &lt;ul&gt; &lt;p&gt; If a shared storage device is emulated (as determined by {@link EnvironmentisExternalStorageEmulated(File)}), it's contents are backed by a private user data partition, which means there is little benefit to storing data here instead of the private directories returned by {@link getFilesDir()}, etc." />
      <item value="Builder" />
      <item value="Storage" />
      <item value="KEY LAST UPDATED TIME STRING" />
      <item value="FASTEST UPDATE INTERVAL IN MILLISECONDS" />
      <item value="CREATE TABLE IF NOT EXISTS" />
      <item value="TABLE IF NOT EXISTS" />
      <item value="IF NOT EXISTS" />
      <item value="table &quot;tables&quot; has more than one primary key" />
      <item value="(OS error - 2:No such file or directory)" />
      <item value="able &quot;tables&quot; has more than one primary key" />
      <item value="android.database.sqlite.SQLiteException: table &quot;tables&quot; has more than one primary key (Sqlite code 1 SQLITE_ERROR): , while compiling: CREATE TABLE IF NOT EXISTS tables(_id INTEGER PRIMARY KEY,title TEXT, specification TEXT, price INTEGER PRIMARY KEY, weight FLOAT), (OS error - 2:No such file or directory)" />
      <item value="Please, commit your changes before you merge." />
      <item value="You have not concluded your merge (MERGE_HEAD exists)." />
      <item value="Please correct the file content" />
      <item value="Load Settings Cannot load settings from file 'homeruslanДокументыAndroidStudioProjects2021.03Breathalyzer.ideamodulesBreathalyzer.iml': File homeruslanДокументыAndroidStudioProjects2021.03Breathalyzer.ideamodulesBreathalyzer.iml does not exist Please correct the file content" />
      <item value="How to order the rows, formatted as an SQL ORDER BY clause (excluding the ORDER BY itself). Passing null will use the default sort order, which may be unordered." />
      <item value="FLAVOR" />
      <item value="access modifiers changed from: private" />
      <item value="android:input Type=&quot;text Cap Words&quot;" />
      <item value="11:31 Reset Failed: Cannot do a keep reset in the middle of a merge. (show balloon)" />
      <item value="Unresolved conflicts remaining in the project.Then you may continue rebase. You also may abort rebase to restore the original branch and stop rebasing." />
      <item value="Can't continue rebase Unresolved conflicts remaining in the project.Then you may continue rebase. You also may abort rebase to restore the original branch and stop rebasing." />
      <item value="10:24 Can't merge because of unmerged files" />
      <item value="You have to resolve all merge conflicts before merge." />
      <item value="After resolving conflicts you also probably would want to commit your files to the current branch." />
      <item value="succeeded" />
      <item value="stroke" />
      <item value="shape" />
      <item value="writable Database" />
      <item value="Attempt to invoke virtual method 'void android.widget.TextView.setText(java.lang.CharSequence)' on a null object reference" />
      <item value="' on a null object reference" />
      <item value="determine" />
      <item value="Unable to determine application" />
      <item value="Unable to determine application id: com.android.tools.idea.run.ApkProvisionException: Error loading build artifacts from: homeruslanДокументыAndroidStudioProjects2021.02TypeZAtariappbuildoutputsapkdebugoutput-metadata.json" />
      <item value="java.lang.RuntimeException: Unable to start activity ComponentInfo{io.kamaz.zerocom.example.zero.View.MainActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.widget.Spinner.setAdapter(android.widget.SpinnerAdapter)' on a null object reference" />
      <item value="Error while waiting for device: Timed out after 300seconds waiting for emulator to come online." />
      <item value="error: illegal start of expression" />
      <item value="Exception" />
      <item value="layout" />
      <item value="'' is not a valid file-based resource name character: File-based resource names must contain only lowercase a-z, 0-9, or underscore" />
      <item value="Versions that do not match:" />
      <item value="Execution failed for task ':app:checkDebugAarMetadata'. &gt; Could not resolve all files for configuration ':app:debugRuntimeClasspath'. &gt; Could not find any version that matches com.github.chrisbanes:PhotoView:latest.release.here. Versions that do not match:" />
      <item value="&gt; Could not find any matches for com.github.chrisbanes:PhotoView:latest.release.here as no versions of com.github.chrisbanes:PhotoView are available." />
      <item value="optional: deprecated support for pre-marshmallow Samsung devices" />
      <item value="required: supports marshmallow devices" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="61" />
        <entry key="RUSSIAN" value="60" />
        <entry key="GALICIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616397162755" />
  </component>
</application>