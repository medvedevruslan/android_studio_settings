<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2035" />
    <option name="newTranslationDialogX" value="4467" />
    <option name="newTranslationDialogY" value="1031" />
    <histories>
      <item value="Convert Network results to database objects" />
      <item value="Videos represent a devbyte that can be played." />
      <item value="as Domain Model" />
      <item value="Truncate long text with a preference for word boundaries and without trailing punctuation." />
      <item value="smart Truncate" />
      <item value="Short description is used for displaying truncated descriptions in the UI" />
      <item value="description" />
      <item value="Dispatches update operations to the given Callback. &lt;p&gt; These updates are atomic such that the first update call affects every update call that comes after it (the same as RecyclerView)." />
      <item value="first" />
      <item value="Dispatches update operations to the given Callback. &lt;p&gt; These updates are atomic such that the first update call affects every update call that comes after it (the same as RecyclerView). @param updateCallback The callback to receive the update operations. @see dispatchUpdatesTo(RecyclerView.Adapter)" />
      <item value="This class holds the information about the result of a {@link DiffUtilcalculateDiff(Callback, boolean)} call." />
      <item value="correct animation." />
      <item value="you can return the particular field that changed in the item and your" />
      <item value="particular field that changed in the item and your" />
      <item value="this method is called to get a payload about the change." />
      <item value="Callback for calculating the diff between two non-null items in a list. Used by ListAdapter to calculate the minimum number of changes between and old list and a new list that's been passed to `submitList`." />
      <item value="are Contents The Same" />
      <item value="Set the listener to be notified when a refresh is triggered via the swipe gesture." />
      <item value="scroll Up Child" />
      <item value="page" />
      <item value="Creates a MutableLiveData with no value assigned to it." />
      <item value="resolve" />
      <item value="consume Each" />
      <item value="Performs the given [action] for each received element and [cancels][ReceiveChannel.cancel] the channel after the execution of the block. If you need to iterate over the channel without consuming it, a regular `for` loop should be used instead. The operation is _terminal_. This function [consumes][ReceiveChannel.consume] all elements of the original [ReceiveChannel" />
      <item value="process Stream" />
      <item value="Coroutine Scope" />
      <item value="Receive Channel" />
      <item value="receive Channel" />
      <item value="TBD" />
      <item value="API 'BaseVariant.getApplicationIdTextResource' is obsolete and has been replaced with 'VariantProperties.applicationId'." />
      <item value="API 'BaseVariant.getApplicationIdTextResource' is obsolete and has been replaced with 'VariantProperties.applicationId'. It will be removed in version 7.0 of the Android Gradle plugin. For more information, see TBD. To determine what is calling BaseVariant.getApplicationIdTextResource, use -Pandroid.debug.obsoleteApi=true on the command line to display more information." />
      <item value="reified" />
      <item value="on Load More" />
      <item value="Unexpected exception thrown by non-Glide code" />
      <item value="If a binding adapter provides the setter, check that the adapter is annotated correctly and that the parameter type matches." />
      <item value="Cannot find a setter for &lt;androidx.recyclerview.widget.RecyclerView items&gt; that accepts parameter type 'androidx.lifecycle.LiveData&lt;java.util.List&lt;com.example.domain.models.Photo&gt;&gt;'" />
      <item value="specified" />
      <item value="Library projects cannot set applicationId. applicationId is set to 'com.example.data' in default config." />
      <item value="Dependent features configured but no package ID was set." />
      <item value="This behavior will not be allowed in Android Gradle plugin 8.0. Please use only AndroidX dependencies or set `android.enableJetifier=true` in the `gradle.properties` file to migrate your project to AndroidX (see https:developer.android.comjetpackandroidxmigrate for more info). The following legacy support libraries are detected:" />
      <item value="exist" />
      <item value="Evaluates the pending bindings, updating any Views that have expressions bound to modified variables. This &lt;b&gt;must&lt;b&gt; be run on the UI thread." />
      <item value="[SwipeRefreshLayout] works as expected when a scroll view is a direct child: it triggers the refresh only when the view is on top. This class adds a way (@link setScrollUpChild} to define which view controls this behavior." />
      <item value="handle Success" />
      <item value="This LiveData depends on another so we can use a transformation." />
      <item value="Returns an empty read-only list. The returned list is serializable (JVM)." />
      <item value="The class name of a Behavior class defining special runtime behavior for this child view." />
      <item value="The following documentation urls were checked: http:developer.android.comreferenceandroidanimationArgbEvaluator.htmlArgbEvaluator-- http:developer.android.comreferenceandroidanimationArgbEvaluator.html&lt;init&gt;() http:developer.android.comreferenceandroidanimationArgbEvaluator.htmlArgbEvaluator(" />
      <item value="fade Animation" />
      <item value="fab" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="781" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="781" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1649051998588" />
  </component>
</application>