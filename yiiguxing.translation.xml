<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="682" />
    <option name="newTranslationDialogWidth" value="1989" />
    <option name="newTranslationDialogX" value="5073" />
    <option name="newTranslationDialogY" value="1243" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="on Response Upload Measure Data" />
      <item value="on Response Device Info" />
      <item value="old Com" />
      <item value="all Received Command" />
      <item value="User-defined message code so that the recipient can identify what this message is about. Each Handler has its own name-space for message codes, so you do not need to worry about yours conflicting with other handlers." />
      <item value="reply Mac Address Or Time" />
      <item value="receive Error" />
      <item value="substring" />
      <item value="Returns the element at the specified position in this list. Params: index – index of the element to return Returns: the element at the specified position in this list Throws: IndexOutOfBoundsException – if the index is out of range (index &lt; 0 || index &gt;= size())" />
      <item value="成功寫出" />
      <item value="Write characteristic without requiring a response by the remote device" />
      <item value="WRITE_TYPE_NO_RESPONSE or" />
      <item value="Set the write type for this characteristic Setting the write type of a characteristic determines how the BluetoothGatt.writeCharacteristic function write this characteristic. Params: writeType – The write type to for this characteristic. Can be one of: WRITE_TYPE_DEFAULT, WRITE_TYPE_NO_RESPONSE or WRITE_TYPE_SIGNED." />
      <item value="access modifiers changed from: protected" />
      <item value="split Task" />
      <item value="parse Task Between Measure And Send Request" />
      <item value="parse Task Beyond Measure And Send Request" />
      <item value="UPLOAD MEASURE DATA" />
      <item value="SEND REQUEST" />
      <item value="ambient Temperature" />
      <item value="the number of values buffered in addition to replay." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
      <item value="Creates a flow that produces values from the specified vararg-arguments." />
      <item value="Implementation note: this is just an &quot;optimized&quot; overload of flowOf(vararg) which significantly reduces the footprint of widespread single-value flows." />
      <item value="Creates a flow that produces the given value." />
      <item value="allocated" />
      <item value="private val dataBase: DataBase = DataBase, private val refreshIntervalMs: Long = 1000" />
      <item value="source" />
      <item value="Network Bound Repository" />
      <item value="remote Posts" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty" />
      <item value="fold" />
      <item value="predicate" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty." />
      <item value="Emit Database content first" />
      <item value="save Remote Data" />
      <item value="@MainThread public void onBackPressed() Trigger a call to the currently added callbacks in reverse order in which they were added. Only if the most recently added callback is not enabled will any previously added callback be called. If hasEnabledCallbacks() is false when this method is called, the fallback Runnable set by the constructor will be triggered. androidx.activity.OnBackPressedDispatcher Gradle: androidx.activity:activity:1.5.1@aar (classes.jar)" />
      <item value="Create an ActivityOptions to transition between Activities using cross-Activity scene animations. This method carries the position of one shared element to the started Activity. The position of sharedElement will be used as the epicenter for the exit Transition. The position of the shared element in the launched Activity will be the epicenter of its entering Transition." />
      <item value="Observe network changes i.e. Internet Connectivity" />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture. @param refreshing Whether or not the view should show refresh progress." />
      <item value="bind" />
      <item value="along" />
      <item value="Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. When the exit Transition completes, finish() is called. If no entry Transition was used, finish() is called immediately and the Activity exit Transition is run. On Android 4.4 or lower, this method only finishes the Activity with no special exit transition." />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page. To set several display options at once, see the setDisplayOptions methods. Params: showHomeAsUp – true to show the user that selecting home will return one level up rather than to the top level of the app. See Also: setDisplayOptions(int), setDisplayOptions(int, int)" />
      <item value="error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: foodium_posts) public abstract void deleteAllPosts();" />
      <item value="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints" />
      <item value="instantiated:" />
      <item value="The surrounding layout (@layoutactivity_post_details) did not actually include this layout. Remove tools:showIn=... from the root tag. Tip: Try to refresh the layout." />
      <item value="Horizontal bias" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="1905" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1905" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669623435467" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1680502327046" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="RUSSIAN" />
    <option name="targetLanguageSelection" value="LAST" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="381" />
    <option name="newTranslationDialogWidth" value="786" />
    <option name="newTranslationDialogX" value="5354" />
    <option name="newTranslationDialogY" value="825" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Installation failed due to: 'Failed to commit install session 162736407 with command package install-commit 162736407. Error: -116: Instant app package must be signed with the BW limit signatures'" />
      <item value="Instant app package must be signed with the BW limit signatures" />
      <item value="Installation did not succeed." />
      <item value="Instant app package must be signed with the BW limit signatures'" />
      <item value="Failed to launch an application on all devices" />
      <item value="st of apks: [0] 'homemedvedevДокументыAndroidStudioProjects2023.02clean_pre_trip_controlappbuildintermediatesapkdebugapp-debug.ap" />
      <item value="List of apks: [0] 'homemedvedevДокументыAndroidStudioProjects2023.02clean_pre_trip_controlappbuildintermediatesapkdebugapp-debug.apk' Installation failed due to: 'Failed to commit install session 570093928 with command package install-commit 570093928. Error: -116: Instant app package must be signed with the BW limit signatures' Retry Failed to launch an application on all devices" />
      <item value="The application could not be installed: INSTALL_FAILED_INSTANT_APP_INVALID" />
      <item value="Ensures that current scope is active. If the job is no longer active, throws CancellationException. If the job was cancelled, thrown exception contains the original cancellation cause. This function does not do anything if there is no Job in the scope's coroutineContext. This method is a drop-in replacement for the following code, but with more precise exception: if (!isActive) { throw CancellationException() }" />
      <item value="This property is a shortcut for coroutineContext.isActive in the scope when CoroutineScope is available. See coroutineContext, isActive and Job.isActive." />
      <item value="Returns true when the current Job is still active (has not completed and was not cancelled yet). Check this property in long-running computation loops to support cancellation:" />
      <item value="ACCESS FINE LOCATION" />
      <item value="ACCESS COARSE LOCATION" />
      <item value="Constant corresponding to connectedDevice in the android.R.attr.foregroundServiceType attribute. Auto, bluetooth, TV or other devices connection, monitoring and interaction." />
      <item value="FOREGROUND SERVICE TYPE CONNECTED DEVICE" />
      <item value="Perform Bluetooth LE scan in low power mode. This is the default scan mode as it consumes the least power. This mode is enforced if the scanning application is not in foreground." />
      <item value="Scan using highest duty cycle. It's recommended to only use this mode when the application is running in the foreground." />
      <item value="Shutting down VM" />
      <item value="_nested Fragment" />
      <item value="on Confirm" />
      <item value="Devices Fragment" />
      <item value="nested Fragment" />
      <item value="fragment Linked List" />
      <item value="Check for instance is always 'true'" />
      <item value="while" />
      <item value="regular State" />
      <item value="could not find callback wrapper" />
      <item value="Calls the specified function block with this value as its argument and returns its result. For detailed usage information see the documentation for scope functions ." />
      <item value="Danil Singly Linked List" />
      <item value="description" />
      <item value="Flag for stopForeground(int): if set, the notification previously provided to startForeground will be detached from the service. Only makes sense when STOP_FOREGROUND_REMOVE is not set -- in this case, the notification will remain shown, but be completely detached from the service and so no longer changed except through direct calls to the notification manager." />
      <item value="Flag for stopForeground(int): if set, the notification previously provided to startForeground will be removed. Otherwise it will remain until a later call (to startForeground(int, Notification) or stopForeground(int) removes it, or the service is destroyed." />
      <item value="mark Result Is Done" />
      <item value="value View" />
      <item value="mark Result Image" />
      <item value="Data Receiver" />
      <item value="pressure Measurement Value" />
      <item value="STOP FOREGROUND DETACH" />
      <item value="STOP FOREGROUND REMOVE" />
      <item value="preliminary Data" />
      <item value="repeat Button Visibility" />
      <item value="pressure In Blood Pressure Cuff" />
      <item value="blood Pressure Cuff" />
      <item value="Temporary" />
      <item value="selection Last Measurement Before Send To DB" />
      <item value="Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants" />
      <item value="Admission" />
      <item value="Temper" />
      <item value="Method Temper Data" />
      <item value="Method Alco Data" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="521" />
        <entry key="RUSSIAN" value="521" />
        <entry key="YORUBA" value="1" />
      </map>
    </option>
  </component>
</application>