<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2039" />
    <option name="newTranslationDialogX" value="4467" />
    <option name="newTranslationDialogY" value="1031" />
    <histories>
      <item value="process Stream" />
      <item value="receive Channel" />
      <item value="Receive Channel" />
      <item value="The class name of a Behavior class defining special runtime behavior for this child view." />
      <item value="Callback for calculating the diff between two non-null items in a list. Used by ListAdapter to calculate the minimum number of changes between and old list and a new list that's been passed to `submitList`." />
      <item value="The following documentation urls were checked: http:developer.android.comreferenceandroidanimationArgbEvaluator.htmlArgbEvaluator-- http:developer.android.comreferenceandroidanimationArgbEvaluator.html&lt;init&gt;() http:developer.android.comreferenceandroidanimationArgbEvaluator.htmlArgbEvaluator(" />
      <item value="fade Animation" />
      <item value="fab" />
      <item value="fab margin" />
      <item value="on Load More" />
      <item value="Extends [SwipeRefreshLayout] to support non-direct descendant scrolling views. [SwipeRefreshLayout] works as expected when a scroll view is a direct child: it triggers the refresh only when the view is on top. This class adds a way (@link setScrollUpChild} to define which view controls this behavior." />
      <item value="Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License." />
      <item value="Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at" />
      <item value="End has been reached" />
      <item value="visible Threshold" />
      <item value="first Visible Item" />
      <item value="visible Item Count" />
      <item value="total" />
      <item value="The total number of items in the dataset after the last load" />
      <item value="An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event has occurred on that RecyclerView." />
      <item value="True if we are still waiting for the last set of data to load." />
      <item value="Remove all secondary listener that were notified of any changes in scroll state or position." />
      <item value="create Web Service" />
      <item value="page" />
      <item value="regular" />
      <item value="response" />
      <item value="Interface that represents a Repository for getting [Photo] related data." />
      <item value="typealias" />
      <item value="By overriding invoke, we allow use cases to be called as &quot;invoking&quot;" />
      <item value="This will ensure coroutine is cancelled if it's still running some tasks" />
      <item value="use-case" />
      <item value="Should be called when use-case owner is destroyed This will ensure coroutine is cancelled if it's still running some tasks" />
      <item value="invoke" />
      <item value="Members" />
      <item value="region Members" />
      <item value="region" />
      <item value="endregion" />
      <item value="Creates a supervisor job object in an active state. Children of a supervisor job can fail independently of each other. A failure or cancellation of a child does not cause the supervisor job to fail and does not affect its other children, so a supervisor can implement a custom policy for handling failures of its children" />
      <item value="Creates a supervisor job object in an active state. Children of a supervisor job can fail independently of each other. A failure or cancellation of a child does not cause the supervisor job to fail and does not affect its other children, so a supervisor can implement a custom policy for handling failures of its children:" />
      <item value="success Block" />
      <item value="handle Result" />
      <item value="State" />
      <item value="Success" />
      <item value="Failure" />
      <item value="Class that represents a Photo in the domain layer." />
      <item value="change Shipment Busy" />
      <item value="Asynchronously send the request and notify callback of its response or if an error occurred talking to the server, creating the request, or processing the response." />
      <item value="java.lang.IllegalStateException: Expected a string but was BEGIN_OBJECT at line 1 column 5078 path .items[0].license" />
      <item value="Owner" />
      <item value="IME ACTION SEARCH" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="729" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="729" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1648446245059" />
  </component>
</application>