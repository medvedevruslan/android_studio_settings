<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2047" />
    <option name="newTranslationDialogX" value="4494" />
    <option name="newTranslationDialogY" value="953" />
    <histories>
      <item value="Note, for testing and architecture purposes, it's bad practice to construct the repository here. We'll show you how to fix this during the codelab" />
      <item value=", for testing and architecture purposes, it's bad practice to construct the repository here. We'll show you how to fix this during the codelab" />
      <item value="Main entry point for accessing tasks data." />
      <item value="Data Source" />
      <item value="Channel is unrecoverably broken and will be disposed!" />
      <item value="fetch Data From Shared Preferences" />
      <item value="Flag indicating that if the described PendingIntent does not already exist, then simply return null instead of creating it. For use with {@link getActivity}, {@link getBroadcast}, and {@link getService}." />
      <item value="Supply the construction arguments for this fragment. The arguments supplied here will be retained across fragment destroy and creation. &lt;p&gt;This method cannot be called if the fragment is added to a FragmentManager and if {@link isStateSaved()} would return true.&lt;p&gt;" />
      <item value="A [MapView] provides an embeddable map interface. You use this class to display map information and to manipulate the map contents from your application. You can center the map on a given coordinate, specify the size of the area you want to display, and style the features of the map to fit your application's use case. Use of [MapView] requires a Mapbox API access token. Obtain an access token on the [Mapbox account page](https:www.mapbox.comstudioaccounttokens). &lt;strong&gt;Warning:&lt;strong&gt; Please note that you are responsible for getting permission to use the map data, and for ensuring your use adheres to the relevant terms of use." />
      <item value="Boolean" />
      <item value="Speakable Text Present Check" />
      <item value="True to smoothly scroll to the new item, false to transition immediately" />
      <item value="set Default Button" />
      <item value="on Page Change Callback" />
      <item value="change Views Alpha" />
      <item value="animation In Process Count" />
      <item value="Set the enabled state of this view. The interpretation of the enabled state varies by subclass." />
      <item value="seek Bar Wind Force Down" />
      <item value="torrent" />
      <item value="torrent Down" />
      <item value="change Is Enable" />
      <item value="Fake Data Source" />
      <item value="Returns a list of all elements sorted according to natural sort order of the value returned by specified [selector] function. The sort is _stable_. It means that equal elements preserve their order relative to each other after sorting." />
      <item value="Executes" />
      <item value="Executes the given function [block] while holding the monitor of the given object [lock]." />
      <item value="Concrete implementation to load tasks from the data sources into a cache." />
      <item value="switch Map" />
      <item value="update Tasks From Remote Data Source" />
      <item value="A generic class that holds a value with its loading status." />
      <item value="amount" />
      <item value="currency From Selection" />
      <item value="currency" />
      <item value="sealed" />
      <item value="otherwise" />
      <item value="Devices Mac Address" />
      <item value="Build was configured to prefer settings repositories over project repositories but repository 'maven2' was added by build file 'build.gradle'" />
      <item value="Build was configured to prefer settings repositories over project repositories but repository 'maven' was added by build file 'build.gradle'" />
      <item value="Marks the API that is dependent on the experimental unsigned types, including those types themselves. Usages of such API will be reported as warnings unless an explicit opt-in with the [OptIn] annotation, e.g. `@OptIn(ExperimentalUnsignedTypes::class)`, or with the `-Xopt-in=kotlin.ExperimentalUnsignedTypes` compiler option is given. It's recommended to propagate the experimental status to the API that depends on unsigned types by annotating it with this annotation." />
      <item value="ViewModel for the task list screen." />
      <item value="A JUnit Test Rule that swaps the background executor used by the Architecture Components with a different one which executes each task synchronously." />
      <item value="A JUnit Test Rule that swaps the background executor used by the Architecture Components with a different one which executes each task synchronously. &lt;p&gt; You can use this rule for your host side tests that use Architecture Components." />
      <item value="JUnit Test Rule that swaps the background executor used by the Architecture Components with a different one which executes each task synchronously. &lt;p&gt; You can use this rule for your host side tests that use Architecture Components." />
      <item value="Then the new task event is triggered" />
      <item value="When adding a new task" />
      <item value="The annotated element would have &quot;private&quot; visibility" />
      <item value="Returns the content and prevents its use again." />
      <item value="get Or Await Value" />
      <item value="snack" />
      <item value="snac" />
      <item value="snackbar" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="541" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="541" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1645429783937" />
  </component>
</application>