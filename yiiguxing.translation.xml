<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="682" />
    <option name="newTranslationDialogWidth" value="1989" />
    <option name="newTranslationDialogX" value="5073" />
    <option name="newTranslationDialogY" value="1243" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="on Response Upload Measure Data" />
      <item value="on Response Device Info" />
      <item value="old Com" />
      <item value="all Received Command" />
      <item value="User-defined message code so that the recipient can identify what this message is about. Each Handler has its own name-space for message codes, so you do not need to worry about yours conflicting with other handlers." />
      <item value="reply Mac Address Or Time" />
      <item value="receive Error" />
      <item value="substring" />
      <item value="Returns the element at the specified position in this list. Params: index – index of the element to return Returns: the element at the specified position in this list Throws: IndexOutOfBoundsException – if the index is out of range (index &lt; 0 || index &gt;= size())" />
      <item value="成功寫出" />
      <item value="Write characteristic without requiring a response by the remote device" />
      <item value="WRITE_TYPE_NO_RESPONSE or" />
      <item value="Set the write type for this characteristic Setting the write type of a characteristic determines how the BluetoothGatt.writeCharacteristic function write this characteristic. Params: writeType – The write type to for this characteristic. Can be one of: WRITE_TYPE_DEFAULT, WRITE_TYPE_NO_RESPONSE or WRITE_TYPE_SIGNED." />
      <item value="access modifiers changed from: protected" />
      <item value="split Task" />
      <item value="parse Task Between Measure And Send Request" />
      <item value="parse Task Beyond Measure And Send Request" />
      <item value="UPLOAD MEASURE DATA" />
      <item value="SEND REQUEST" />
      <item value="ambient Temperature" />
      <item value="the number of values buffered in addition to replay." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
      <item value="Creates a flow that produces values from the specified vararg-arguments." />
      <item value="Implementation note: this is just an &quot;optimized&quot; overload of flowOf(vararg) which significantly reduces the footprint of widespread single-value flows." />
      <item value="Creates a flow that produces the given value." />
      <item value="allocated" />
      <item value="private val dataBase: DataBase = DataBase, private val refreshIntervalMs: Long = 1000" />
      <item value="source" />
      <item value="Network Bound Repository" />
      <item value="remote Posts" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty" />
      <item value="fold" />
      <item value="predicate" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty." />
      <item value="Emit Database content first" />
      <item value="save Remote Data" />
      <item value="@MainThread public void onBackPressed() Trigger a call to the currently added callbacks in reverse order in which they were added. Only if the most recently added callback is not enabled will any previously added callback be called. If hasEnabledCallbacks() is false when this method is called, the fallback Runnable set by the constructor will be triggered. androidx.activity.OnBackPressedDispatcher Gradle: androidx.activity:activity:1.5.1@aar (classes.jar)" />
      <item value="Create an ActivityOptions to transition between Activities using cross-Activity scene animations. This method carries the position of one shared element to the started Activity. The position of sharedElement will be used as the epicenter for the exit Transition. The position of the shared element in the launched Activity will be the epicenter of its entering Transition." />
      <item value="Observe network changes i.e. Internet Connectivity" />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture. @param refreshing Whether or not the view should show refresh progress." />
      <item value="bind" />
      <item value="along" />
      <item value="Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. When the exit Transition completes, finish() is called. If no entry Transition was used, finish() is called immediately and the Activity exit Transition is run. On Android 4.4 or lower, this method only finishes the Activity with no special exit transition." />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page. To set several display options at once, see the setDisplayOptions methods. Params: showHomeAsUp – true to show the user that selecting home will return one level up rather than to the top level of the app. See Also: setDisplayOptions(int), setDisplayOptions(int, int)" />
      <item value="error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: foodium_posts) public abstract void deleteAllPosts();" />
      <item value="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints" />
      <item value="instantiated:" />
      <item value="The surrounding layout (@layoutactivity_post_details) did not actually include this layout. Remove tools:showIn=... from the root tag. Tip: Try to refresh the layout." />
      <item value="Horizontal bias" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="1905" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1905" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669623435467" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1686652547909" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="RUSSIAN" />
    <option name="targetLanguageSelection" value="LAST" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="593" />
    <option name="newTranslationDialogWidth" value="957" />
    <option name="newTranslationDialogX" value="1366" />
    <option name="newTranslationDialogY" value="789" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="java.lang.IllegalStateException: Vertically scrollable component was measured with an infinity maximum height constraints, which is disallowed. One of the common reasons is nesting layouts like LazyColumn and Column(Modifier.verticalScroll()). If you want to add a header before the list of items please add a header as a separate item() before the main items() inside the LazyColumn scope. There are could be other reasons for this to happen: your ComposeView was added into a LinearLayout with some weight, you applied Modifier.wrapContentSize(unbounded = true) or wrote a custom layout. Please try to remove the source of infinite constraints in the hierarchy above the scrolling container." />
      <item value="curve To Relative" />
      <item value="Filled icons (previously the only available theme, also known as the baseline theme) are the default icon theme. You can also use Default as an alias for these icon" />
      <item value="Soothe Bottom Navigation" />
      <item value="@param trailingIcon the optional trailing icon to be displayed at the end of the text field container" />
      <item value="trailing Icon" />
      <item value="leading Icon" />
      <item value="Allow the content to measure at its desired height without regard for the incoming measurement minimum height constraint, and, if unbounded is true, also without regard for the incoming measurement maximum height constraint. If the content's measured size is smaller than the minimum height constraint, align it within that minimum height space. If the content's measured size is larger than the maximum height constraint (only possible when unbounded is true), align over the maximum height space. Example usage: Samples: androidx.compose.foundation.layout.samples.SimpleWrapContentVerticallyAlignedModifier Unresolved" />
      <item value="weight" />
      <item value="height" />
      <item value="elevation" />
      <item value="fraction" />
      <item value="shape" />
      <item value="Greeting" />
      <item value="product Existence" />
      <item value="Existence" />
      <item value="scrim" />
      <item value="outline" />
      <item value="tertiary" />
      <item value="md theme light tertiary" />
      <item value="Primary" />
      <item value="Font Weight" />
      <item value="The thickness of the glyphs, in a range of 1, 1000. Params: weight - Font weight value in the range of 1, 1000 See Also: Font, FontFamily" />
      <item value="scale" />
      <item value="Scale the contents of the composable by the following scale factors along the horizontal and vertical axis respectively. Negative scale factors can be used to mirror content across the corresponding horizontal or vertical axis. Example usage: Params: scaleX - Multiplier to scale content along the horizontal axis scaleY - Multiplier to scale content along the vertical axis See Also: graphicsLayer Samples: androidx.compose.ui.samples.ScaleNonUniformSample Unresolved" />
      <item value="Circle Shape" />
      <item value="Row Scope" />
      <item value="Product Existence" />
      <item value="product Cost" />
      <item value="product Coast" />
      <item value="car Brand" />
      <item value="@property bodyMedium bodyMedium is the second largest body, and is typically used for long-form writing as it works well for small text sizes. For longer sections of text, a serif or sans serif typeface is recommended." />
      <item value="headline" />
      <item value="Constructor to create a Typography. For information on the types of style defined in this constructor, see the property documentation for Typography. Params: defaultFontFamily - the default FontFamily to be used for TextStyles provided in this constructor. This default will be used if the FontFamily on the TextStyle is null. h1 - h1 is the largest headline, reserved for short, important text or numerals. h2 - h2 is the second largest headline, reserved for short, important text or numerals. h3 - h3 is the third largest headline, reserved for short, important text or numerals. h4 - h4 is the fourth largest headline, reserved for short, important text or numerals. h5 - h5 is the fifth largest headline, reserved for short, important text or numerals. h6 - h6 is the sixth largest headline, reserved for short, important text or numerals. subtitle1 - subtitle1 is the largest subtitle, and is typically reserved for medium-emphasis text that is shorter in length. subtitle2 - subtitle2 is the smallest subtitle, and is typically reserved for medium-emphasis text that is shorter in length. body1 - body1 is the largest body, and is typically used for long-form writing as it works well for small text sizes. body2 - body2 is the smallest body, and is typically used for long-form writing as it works well for small text sizes. button - button text is a call to action used in different types of buttons (such as text, outlined and contained buttons) and in tabs, dialogs, and cards. caption - caption is one of the smallest font sizes. It is used sparingly to annotate imagery or to introduce a headline. overline - overline is one of the smallest font sizes. It is used sparingly to annotate imagery or to introduce a headline." />
      <item value="@param content content of your screen. The lambda receives an [PaddingValues] that should be applied to the content root via Modifier.padding to properly offset top and bottom bars. If you're using VerticalScroller, apply this modifier to the child of the scroller, and not on the scroller itself." />
      <item value="@param isFloatingActionButtonDocked whether [floatingActionButton] should overlap with [bottomBar] for half a height, if [bottomBar] exists. Ignored if there's no [bottomBar] or no [floatingActionButton]." />
      <item value="[bottomBar] for half a height, if [bottomBar] exists. Ignored if there's no [bottomBar] or no" />
      <item value="@param bottomBar bottom bar of the screen. Consider using [BottomAppBar]." />
      <item value="Scaffold" />
      <item value="horizontal Arrangement" />
      <item value="fill Max Size" />
      <item value="add Outline" />
      <item value="An area defined as a path. Note that if you use this path for drawing the shadow on Android versions less than 10 the shadow will not be drawn for the concave paths. See Path.isConvex." />
      <item value="Generic" />
      <item value="Rounded" />
      <item value="Rectangle Shape" />
      <item value="Path Shape" />
      <item value="Arc Shape" />
      <item value="Round Rect Shape" />
      <item value="content Scale" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3" />
        <entry key="DUTCH" value="1" />
        <entry key="ENGLISH" value="876" />
        <entry key="RUSSIAN" value="876" />
        <entry key="YORUBA" value="1" />
      </map>
    </option>
  </component>
</application>