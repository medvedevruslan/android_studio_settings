<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2023" />
    <option name="newTranslationDialogX" value="599" />
    <option name="newTranslationDialogY" value="761" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Gets whether you should show UI with rationale before requesting a permission. Params: activity – The target activity. permission – A permission your app wants to request. Returns: Whether you should show permission rationale UI." />
      <item value="Checks that the specified object reference is not null and throws a customized NullPointerException if it is. This method is designed primarily for doing parameter validation in methods and constructors with multiple parameters, as demonstrated below" />
      <item value="Determine whether you have been granted a particular permission. Params: permission – The name of the permission being checked." />
      <item value="Determine whether you have been granted a particular permission." />
      <item value="Returns an array containing the specified elements." />
      <item value="register For Activity Result" />
      <item value="on Bluetooth Dialog Button Click" />
      <item value="permissions Granted" />
      <item value="Check Permissions Fragment" />
      <item value="Add Context instance to Koin container @param androidContext - Context" />
      <item value="create Custom Back Pressed" />
      <item value="view Lifecycle Owner" />
      <item value="Add a new {@link OnBackPressedCallback}. Callbacks are invoked in the reverse order in which they are added, so this newly added {@link OnBackPressedCallback} will be the first callback to receive a callback if {@link onBackPressed()} is called. &lt;p&gt; This method is &lt;strong&gt;not&lt;strong&gt; {@link Lifecycle} aware - if you'd like to ensure that you only get callbacks when at least {@link Lifecycle.StateSTARTED started}, use {@link addCallback(LifecycleOwner, OnBackPressedCallback)}. It is expected that you call {@link OnBackPressedCallbackremove()} to manually remove your callback." />
      <item value="before" />
      <item value="Called getViewLifecycleOwner() but onCreateView() returned null" />
      <item value="handle On Back Pressed" />
      <item value="Create a OnBackPressedCallback. Params: enabled – The default enabled state for this callback. See Also: setEnabled(boolean)" />
      <item value="Caused by: java.lang.IllegalStateException: Can't access the Fragment View's LifecycleOwner when getView() is null i.e., before onCreateView() or after onDestroyView()" />
      <item value="ccess the Fragment View's LifecycleOwner when getView() is null i.e., before onCreateView() or after onDestroyView()" />
      <item value="is Valid" />
      <item value="Receive callbacks to a new OnBackPressedCallback when the given LifecycleOwner is at least started. This will automatically call addCallback(OnBackPressedCallback) and remove the callback as the lifecycle state changes. As a corollary, if your lifecycle is already at least started, calling this method will result in an immediate call to addCallback(OnBackPressedCallback). When the LifecycleOwner is destroyed, it will automatically be removed from the list of callbacks. The only time you would need to manually call OnBackPressedCallback.remove() is if you'd like to remove the callback prior to destruction of the associated lifecycle. If the Lifecycle is already destroyed when this method is called, the callback will not be added. Params: owner – The LifecycleOwner which controls when the callback should be invoked onBackPressedCallback – The callback to add See Also: onBackPressed()" />
      <item value="This is the class for text whose content and markup can both be changed." />
      <item value="Spannable String Builder" />
      <item value="A problem occurred configuring project ':domain'. &gt; 'kotlin-android' plugin requires one of the Android Gradle plugins. Please apply one of the following plugins to ':domain' project:" />
      <item value="Add Context instance to Koin container Params: androidContext - Context" />
      <item value="Template Fragment" />
      <item value="get Power Icon To Text" />
      <item value="get Text With Power Icon" />
      <item value="shared Pref User Storage" />
      <item value="current Toast" />
      <item value="hide" />
      <item value="enable debug mode, it's disabled by default" />
      <item value="it's 30s by default, making it 5s for testing --" />
      <item value="never For Location" />
      <item value="required" />
      <item value="Retrieve the {@link OnBackPressedDispatcher} that will be triggered when {@link onBackPressed()} is called. @return The {@link OnBackPressedDispatcher} associated with this ComponentActivity." />
      <item value="Retrieve the {@link OnBackPressedDispatcher} that will be triggered when {@link onBackPressed()} is called. @return The {@link OnBackPressedDispatcher} associated with this ComponentActivity" />
      <item value="on Back Pressed Dispatcher" />
      <item value="Not Paired" />
      <item value="Laments" />
      <item value="Sets whether this dialog is canceled when touched outside the window's bounds. If setting to true, the dialog is set to be cancelable if not already set." />
      <item value="set Canceled On Touch Outside" />
      <item value="Dialog Modes" />
      <item value="Preferences" />
      <item value="Preferences Methods Fragment" />
      <item value="scale Type" />
      <item value="process Stream" />
      <item value="resolve" />
      <item value="Response Error" />
      <item value="handle Result" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="897" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="897" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1650284580347" />
  </component>
</application>