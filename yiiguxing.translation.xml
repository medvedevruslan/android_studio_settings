<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="1995" />
    <option name="newTranslationDialogX" value="5005" />
    <option name="newTranslationDialogY" value="1307" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Returns a formatted string using the specified format string and arguments." />
      <item value="Uses the provided format as a format string and returns a string obtained by substituting the specified arguments, using the default locale." />
      <item value="UPLOAD MEASURE DATA" />
      <item value="reply Upload Measure Data" />
      <item value="CMD REPLY RESULT SUCCESS" />
      <item value="reply Mac Address Or Time" />
      <item value="Calculates the remainder of truncating division of this value by the other value. The result is either zero or has the same sign as the dividend and has the absolute value less than the absolute value of the divisor." />
      <item value="Returns the number of minutes past the hour represented by this date, as interpreted in the local time zone. The value returned is between 0 and 59. Deprecated As of JDK version 1.1, replaced by Calendar.get(Calendar.MINUTE). Returns: the number of minutes past the hour represented by this date. See Also: Calendar" />
      <item value="Gets a calendar using the default time zone and locale. The Calendar returned is based on the current time in the default time zone with the default FORMAT locale. Returns: a Calendar." />
      <item value="Returns the current time in milliseconds. Note that while the unit of time of the return value is a millisecond, the granularity of the value depends on the underlying operating system and may be larger. For example, many operating systems measure time in units of tens of milliseconds. See the description of the class Date for a discussion of slight discrepancies that may arise between &quot;computer time&quot; and coordinated universal time (UTC). Returns: the difference, measured in milliseconds, between the current time and midnight, January 1, 1970 UTC." />
      <item value="Returns a string obtained by concatenating this string with the string representation of the given other object" />
      <item value="Performs a bitwise AND operation between the two values." />
      <item value="SEND REQUEST" />
      <item value="append" />
      <item value="DEVICE CODE THERMO APP REPLY" />
      <item value="HEADER" />
      <item value="Creates an iterator over the elements of the array." />
      <item value="Returns the substring of this string starting at the startIndex and ending right before the endIndex." />
      <item value="Parcelable encountered IOException writing serializable object" />
      <item value="Parcelable encountered IOException writing serializable object (name = com.example.clean_pre_trip_control.presentation.ui.ble.view.TemperatureMeasurementFragmentactionWithBleGatt2) at android.os.Parcel.writeSerializable(Parcel.java:2177)" />
      <item value="Parcelable encountered IOException writing serializable object (name = com.example.clean_pre_trip_control.presentation.ui.ble.view.TemperatureMeasurementFragmentactionWithBleGatt2)" />
      <item value="cast" />
      <item value="cannot be cast" />
      <item value="Parcelable protocol requires a Parcelable.Creator object called CREATOR on class com.example.clean_pre_trip_control.presentation.ui.ble.view.TemperatureMeasurementFragmentactionWithBleGatt1 at android.os.Parcel.readParcelableCreator(Parcel.java:3431)" />
      <item value="Parcelable protocol requires a Parcelable.Creator object called CREATOR on class com.example.clean_pre_trip_control.presentation.ui.ble.view.TemperatureMeasurementFragmentactionWithBleGatt1" />
      <item value="Unhandled exception in callback" />
      <item value="Cannot invoke setValue on a background thread" />
      <item value="Unable to instantiate fragment com.example.clean_pre_trip_control.presentation.ui.ble.view.TemperatureMeasurementFragment: could not find Fragment constructor" />
      <item value="Should be called when use-case owner is destroyed This will ensure coroutine is cancelled if it's still running some tasks" />
      <item value="request Items" />
      <item value="Returns an empty read-only list. The returned list is serializable (JVM)." />
      <item value="Deferred value is a non-blocking cancellable future â€” it is a Job with a result." />
      <item value="The context of this scope. Context is encapsulated by the scope and used for implementation of coroutine builders that are extensions on the scope. Accessing this property in general code is not recommended for any purposes except accessing the [Job] instance for advanced usages. By convention, should contain an instance of a [job][Job] to enforce structured concurrency." />
      <item value="By overriding invoke, we allow use cases to be called as &quot;invoking&quot;" />
      <item value="region Members" />
      <item value="TODO(&quot;Not yet implemented&quot;)" />
      <item value="Creates a supervisor job object in an active state. Children of a supervisor job can fail independently of each other. A failure or cancellation of a child does not cause the supervisor job to fail and does not affect its other children, so a supervisor can implement a custom policy for handling failures of its children:" />
      <item value="This method will be called when this ViewModel is no longer used and will be destroyed. It is useful when ViewModel observes some data and you need to clear this subscription to prevent a leak of this ViewModel." />
      <item value="Returns a List containing all elements. The operation is terminal. This function consumes all elements of the original ReceiveChannel." />
      <item value="violate" />
      <item value="Receiver's interface to Channel." />
      <item value="error: TitleDao_Impl is not abstract and does not override abstract method insertTitle(Title,Continuation&lt;? super Unit&gt;) in TitleDao public final class TitleDao_Impl implements TitleDao { ^" />
      <item value="Refresh the title, showing a loading spinner while it refreshes and errors via snackbar." />
      <item value="completable.await()`" />
      <item value="insert Title" />
      <item value="Dao" />
      <item value="Unable to refresh title" />
      <item value="on" />
      <item value="on Completed" />
      <item value="A Future represents the result of an asynchronous computation. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the computation. The result can only be retrieved using method get when the computation has completed, blocking if necessary until it is ready. Cancellation is performed by the cancel method. Additional methods are provided to determine if the task completed normally or was cancelled. Once a computation has completed, the computation cannot be cancelled. If you would like to use a Future for the sake of cancellability but not provide a usable result, you can declare types of the form Future&lt;?&gt; and return null as a result of the underlying task." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1353" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1353" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1659331952533" />
  </component>
</application>