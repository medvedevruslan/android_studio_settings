<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2047" />
    <option name="newTranslationDialogX" value="4494" />
    <option name="newTranslationDialogY" value="953" />
    <histories>
      <item value="execute" />
      <item value="Indicates that Lint should ignore the specified warnings for the annotated element." />
      <item value="If a binding adapter provides the setter, check that the adapter is annotated correctly and that the parameter type matches." />
      <item value="A Binding Adapter that is called whenever the value of the attribute `android:progressTint` changes. Depending on the value it determines the color of the progress bar." />
      <item value="Applies a tint to the progress indicator, if one exists, or to the entire progress drawable otherwise. Does not modify the current tint mode, which is {@link PorterDuff.ModeSRC_IN} by default. &lt;p&gt; The progress indicator should be specified as a layer with id {@link android.R.idprogress} in a {@link LayerDrawable} used as the progress drawable. &lt;p&gt; Subsequent calls to {@link setProgressDrawable(Drawable)} will automatically mutate the drawable and apply the specified tint and tint mode using {@link DrawablesetTintList(ColorStateList)}. @param tint the tint to apply, may be {@code null} to clear tint @attr ref android.R.styleableProgressBar_progressTint @see getProgressTintList() @see DrawablesetTintList(ColorStateList)" />
      <item value="get Associated Color" />
      <item value="hide" />
      <item value="hide If Zero" />
      <item value="Ensures that this value is not greater than the specified [maximumVa" />
      <item value="coerce At Most" />
      <item value="Ensures that this value is not greater than the specified [maximumValue]." />
      <item value="Sets the value of the progress bar so that 5 likes will fill it up." />
      <item value="Showcases Binding Adapters with multiple attributes. Note that this adapter is called whenever any of the attribute changes." />
      <item value="progress Scaled" />
      <item value="Solution" />
      <item value="Unused Binding Adapter to replace the Binding Converter that hides a view if the number of likes is zero." />
      <item value="Transformation methods for {@link LiveData}. &lt;p&gt; These methods permit functional composition and delegation of {@link LiveData} instances. The transformations are calculated lazily, and will run only when the returned {@link LiveData} is observed. Lifecycle behavior is propagated from the input {@code source} {@link LiveData} to the returned one." />
      <item value="This is to prevent external modification of the variable." />
      <item value="edit Comp" />
      <item value="Plain old activity with lots of problems to fix." />
      <item value="Bluetooth binder is null" />
      <item value="Pager Adapter Frag" />
      <item value="get Tasks request All Tasks From Remote Data Source" />
      <item value="grid" />
      <item value="Note, for testing and architecture purposes, it's bad practice to construct the repository here. We'll show you how to fix this during the codelab" />
      <item value="No tests found for given includes:" />
      <item value="request All Tasks From Remote Data Source" />
      <item value="Main entry point for accessing tasks data." />
      <item value=", for testing and architecture purposes, it's bad practice to construct the repository here. We'll show you how to fix this during the codelab" />
      <item value="Data Source" />
      <item value="Channel is unrecoverably broken and will be disposed!" />
      <item value="fetch Data From Shared Preferences" />
      <item value="Flag indicating that if the described PendingIntent does not already exist, then simply return null instead of creating it. For use with {@link getActivity}, {@link getBroadcast}, and {@link getService}." />
      <item value="Supply the construction arguments for this fragment. The arguments supplied here will be retained across fragment destroy and creation. &lt;p&gt;This method cannot be called if the fragment is added to a FragmentManager and if {@link isStateSaved()} would return true.&lt;p&gt;" />
      <item value="A [MapView] provides an embeddable map interface. You use this class to display map information and to manipulate the map contents from your application. You can center the map on a given coordinate, specify the size of the area you want to display, and style the features of the map to fit your application's use case. Use of [MapView] requires a Mapbox API access token. Obtain an access token on the [Mapbox account page](https:www.mapbox.comstudioaccounttokens). &lt;strong&gt;Warning:&lt;strong&gt; Please note that you are responsible for getting permission to use the map data, and for ensuring your use adheres to the relevant terms of use." />
      <item value="Boolean" />
      <item value="Speakable Text Present Check" />
      <item value="True to smoothly scroll to the new item, false to transition immediately" />
      <item value="set Default Button" />
      <item value="on Page Change Callback" />
      <item value="change Views Alpha" />
      <item value="animation In Process Count" />
      <item value="Set the enabled state of this view. The interpretation of the enabled state varies by subclass." />
      <item value="seek Bar Wind Force Down" />
      <item value="torrent" />
      <item value="torrent Down" />
      <item value="change Is Enable" />
      <item value="Fake Data Source" />
      <item value="Returns a list of all elements sorted according to natural sort order of the value returned by specified [selector] function. The sort is _stable_. It means that equal elements preserve their order relative to each other after sorting." />
      <item value="Executes" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="571" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="571" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1646802107426" />
  </component>
</application>