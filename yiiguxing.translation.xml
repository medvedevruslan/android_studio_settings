<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2003" />
    <option name="newTranslationDialogX" value="4625" />
    <option name="newTranslationDialogY" value="1337" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Performs the given action for each received element and cancels the channel after the execution of the block. If you need to iterate over the channel without consuming it, a regular for loop should be used instead. The operation is terminal. This function consumes all elements of the original ReceiveChannel." />
      <item value="consume Each" />
      <item value="process Stream" />
      <item value="This method will be called when this ViewModel is no longer used and will be destroyed. It is useful when ViewModel observes some data and you need to clear this subscription to prevent a leak of this ViewModel." />
      <item value="The context of this scope. Context is encapsulated by the scope and used for implementation of coroutine builders that are extensions on the scope. Accessing this property in general code is not recommended for any purposes except accessing the Job instance for advanced usages. By convention, should contain an instance of a job to enforce structured concurrency." />
      <item value="resolve" />
      <item value="handle State" />
      <item value="handle Success" />
      <item value="handle Result" />
      <item value="Failed" />
      <item value="Failure" />
      <item value="By overriding invoke, we allow use cases to be called as &quot;invoking&quot;" />
      <item value="Data" />
      <item value="reason" />
      <item value="Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. Params: key – a String defaultValue – Value to return if key does not exist Returns: a boolean value" />
      <item value="Batch" />
      <item value="on Batch Scan Results" />
      <item value="Post a notification to be shown in the status bar. If a notification with the same id has already been posted by your application and has not yet been canceled, it will be replaced by the updated information. Params: id – An identifier for this notification unique within your application. notification – A Notification object describing what to show the user. Must not be null." />
      <item value="Returns the runtime Java class of this object." />
      <item value="Returns a KClass instance corresponding to the given Java Class instance." />
      <item value="to avoid binary compatibility issues." />
      <item value="issues" />
      <item value="avoid" />
      <item value="assigned" />
      <item value="Calls the specified function block with the given receiver as its receiver and returns its result. For detailed usage information see the documentation for scope functions ." />
      <item value="A class that has an Android lifecycle. These events can be used by custom components to handle lifecycle changes without implementing any code inside the Activity or the Fragment. See Also: Lifecycle, ViewTreeLifecycleOwner" />
      <item value="Destination Info" />
      <item value="route" />
      <item value="wait Delay" />
      <item value="NAME INSECURE" />
      <item value="User Out Scenario" />
      <item value="Model State" />
      <item value="User Is Out" />
      <item value="describe Contents" />
      <item value="Scan using highest duty cycle. It's recommended to only use this mode when the application is running in the foreground." />
      <item value="SCAN MODE LOW LATENCY" />
      <item value="is Valid" />
      <item value="Companion" />
      <item value="Value signifying that the user has not expressed an importance. This value is for persisting preferences, and should never be associated with an actual notification" />
      <item value="A notification with no importance: does not show in the shade." />
      <item value="Min notification importance: only shows in the shade, below the fold. This should not be used with Service.startForeground since a foreground service is supposed to be something the user cares about so it does not make semantic sense to mark its notification as minimum importance. If you do this as of Android version Build.VERSION_CODES.O, the system will show a higher-priority notification about your app running in the background." />
      <item value="On older platforms, this value is still used, so it is still required for apps supporting those platforms." />
      <item value="above" />
      <item value="On platforms Build.VERSION_CODES.O and above this value is ignored in favor of the importance value set on the notification's channel. On older platforms, this value is still used, so it is still required for apps supporting those platforms." />
      <item value="Set the relative priority for this notification. Priority is an indication of how much of the user's valuable attention should be consumed by this notification. Low-priority notifications may be hidden from the user in certain situations, while the user might be interrupted for a higher-priority notification. The system sets a notification's priority based on various factors including the setPriority value. The effect may differ slightly on different platforms. On platforms Build.VERSION_CODES.O and above this value is ignored in favor of the importance value set on the notification's channel. On older platforms, this value is still used, so it is still required for apps supporting those platforms. Params: pri – Relative priority for this notification. Must be one of the priority constants defined by NotificationCompat. Acceptable values range from PRIORITY_MIN (-2) to PRIORITY_MAX (2). See Also: NotificationChannelCompat.Builder.setImportance(int)" />
      <item value="Notification Compat" />
      <item value="Low notification importance: Shows in the shade, and potentially in the status bar (see shouldHideSilentStatusBarIcons()), but is not audibly intrusive." />
      <item value="Default notification importance: shows everywhere, makes noise, but does not visually intrude" />
      <item value="Default notification importance: shows everywhere, makes noise, but does not visually intrude." />
      <item value="Sets the notification light color for notifications posted to this channel, if lights are enabled on this channel and the device supports that feature. Only modifiable before the channel is submitted to NotificationManager.createNotificationChannel(NotificationChannel)." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1150" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1150" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1655703736109" />
  </component>
</application>