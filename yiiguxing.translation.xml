<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="1991" />
    <option name="newTranslationDialogX" value="5005" />
    <option name="newTranslationDialogY" value="1307" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="inflater" />
      <item value="Inflater" />
      <item value="@param replay the number of values replayed to new subscribers (cannot be negative, defaults to zero)." />
      <item value="Returns a flow that switches to a new flow produced by transform function every time the original flow emits a value. When the original flow emits a new value, the previous flow produced by transform block is cancelled." />
      <item value="A coroutine dispatcher that is not confined to any specific thread. It executes initial continuation of the coroutine in the current call-frame and lets the coroutine resume in whatever thread that is used by the corresponding suspending function, without mandating any specific threading policy. Nested coroutines launched in this dispatcher form an event-loop to avoid stack overflows." />
      <item value="The default [CoroutineDispatcher] that is used by all standard builders like [launch][CoroutineScope.launch], [async][CoroutineScope.async], etc. if no dispatcher nor any other [ContinuationInterceptor] is specified in their context." />
      <item value="A coroutine dispatcher that is confined to the Main thread operating with UI objects. This dispatcher can be used either directly or via [MainScope] factory. Usually such dispatcher is single-threaded." />
      <item value="txt Input Layout Config" />
      <item value="Is set when VH is bound from the adapter and cleaned right before it is sent to RecyclerView.RecycledViewPool." />
      <item value="on Create View Holder" />
      <item value="require Value" />
      <item value="The base class for all errors and exceptions. Only instances of this class can be thrown or caught." />
      <item value="Throwable" />
      <item value="cause" />
      <item value="A collection that holds pairs of objects (keys and values) and supports efficiently retrieving the value corresponding to each key. Map keys are unique; the map holds only one value for each key. Methods in this interface support only read-only access to the map; read-write access is supported through the MutableMap interface." />
      <item value="hide Up Button" />
      <item value="Retrieve a reference to this activity's ActionBar." />
      <item value="whether" />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page." />
      <item value="Implement price variation system" />
      <item value="Drop the latest value that is being added to the buffer right now on buffer overflow (so that buffer contents stay the same), do not suspend." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
      <item value="configures an [emit][MutableSharedFlow.emit] action on buffer overflow. Optional, defaults to [suspending][BufferOverflow.SUSPEND] attempts to emit a value. Values other than [BufferOverflow.SUSPEND] are supported only when `replay &gt; 0` or `extraBufferCapacity &gt; 0`. Buffer overflow can happen only when there is at least one subscriber that is not ready to accept the new value. In the absence of subscribers only the most recent [replay] values are stored and the buffer overflow behavior is never triggered and has no effect." />
      <item value="the number of values buffered in addition to `replay`. [emit][MutableSharedFlow.emit] does not suspend while there is a buffer space remaining (optional, cannot be negative, defaults to zero)." />
      <item value="The property annotated with [IgnoredOnParcel] will not be stored into parcel." />
      <item value="unregister" />
      <item value="name – The name of the extra data, with package prefix. value – The Parcelable data value" />
      <item value="if Broadcast Registered" />
      <item value="wait Delay" />
      <item value="condition" />
      <item value="clause" />
      <item value="condition Color Value On Display" />
      <item value="Launch Type" />
      <item value="Measure" />
      <item value="Measurement" />
      <item value="reply Upload Measure Data" />
      <item value="data" />
      <item value="date" />
      <item value="@param value The value to be wrapped as an observable." />
      <item value="The value to be wrapped as an observable." />
      <item value="Instruction Model" />
      <item value="invoke" />
      <item value="java.lang.NoSuchMethodError: No direct method &lt;init&gt;(LjavalangObject;)V in class Lcomexampleclean_pre_trip_controlpresentationuiblemodelResultSuccess; or its super classes (declaration of 'com.example.clean_pre_trip_control.presentation.ui.ble.model.ResultSuccess' appears in dataapp~~SCDAIxn0L6FE3GKL1R3ECQ==com.example.clean_pre_trip_control-J-uNLQePsmHYW0-SwSJv9g==base.apk!classes16.dex)" />
      <item value="NoSuchMethodError: No direct method" />
      <item value="value" />
      <item value="Views Models" />
      <item value="2022-09-21 15:21:53.111 4245-4245com.example.twodialogfragments EAndroidRuntime: Caused by: java.lang.ClassCastException: kotlinx.coroutines.flow.FlowKt__ErrorsKtcatchinlinedunsafeFlow1 cannot be cast to kotlinx.coroutines.flow.MutableStateFlow" />
      <item value="handle Result" />
      <item value="measurement" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1720" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1720" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1665476807823" />
  </component>
</application>