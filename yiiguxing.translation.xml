<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="682" />
    <option name="newTranslationDialogWidth" value="1989" />
    <option name="newTranslationDialogX" value="5073" />
    <option name="newTranslationDialogY" value="1243" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="on Response Upload Measure Data" />
      <item value="on Response Device Info" />
      <item value="old Com" />
      <item value="all Received Command" />
      <item value="User-defined message code so that the recipient can identify what this message is about. Each Handler has its own name-space for message codes, so you do not need to worry about yours conflicting with other handlers." />
      <item value="reply Mac Address Or Time" />
      <item value="receive Error" />
      <item value="substring" />
      <item value="Returns the element at the specified position in this list. Params: index – index of the element to return Returns: the element at the specified position in this list Throws: IndexOutOfBoundsException – if the index is out of range (index &lt; 0 || index &gt;= size())" />
      <item value="成功寫出" />
      <item value="Write characteristic without requiring a response by the remote device" />
      <item value="WRITE_TYPE_NO_RESPONSE or" />
      <item value="Set the write type for this characteristic Setting the write type of a characteristic determines how the BluetoothGatt.writeCharacteristic function write this characteristic. Params: writeType – The write type to for this characteristic. Can be one of: WRITE_TYPE_DEFAULT, WRITE_TYPE_NO_RESPONSE or WRITE_TYPE_SIGNED." />
      <item value="access modifiers changed from: protected" />
      <item value="split Task" />
      <item value="parse Task Between Measure And Send Request" />
      <item value="parse Task Beyond Measure And Send Request" />
      <item value="UPLOAD MEASURE DATA" />
      <item value="SEND REQUEST" />
      <item value="ambient Temperature" />
      <item value="the number of values buffered in addition to replay." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
      <item value="Creates a flow that produces values from the specified vararg-arguments." />
      <item value="Implementation note: this is just an &quot;optimized&quot; overload of flowOf(vararg) which significantly reduces the footprint of widespread single-value flows." />
      <item value="Creates a flow that produces the given value." />
      <item value="allocated" />
      <item value="private val dataBase: DataBase = DataBase, private val refreshIntervalMs: Long = 1000" />
      <item value="source" />
      <item value="Network Bound Repository" />
      <item value="remote Posts" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty" />
      <item value="fold" />
      <item value="predicate" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty." />
      <item value="Emit Database content first" />
      <item value="save Remote Data" />
      <item value="@MainThread public void onBackPressed() Trigger a call to the currently added callbacks in reverse order in which they were added. Only if the most recently added callback is not enabled will any previously added callback be called. If hasEnabledCallbacks() is false when this method is called, the fallback Runnable set by the constructor will be triggered. androidx.activity.OnBackPressedDispatcher Gradle: androidx.activity:activity:1.5.1@aar (classes.jar)" />
      <item value="Create an ActivityOptions to transition between Activities using cross-Activity scene animations. This method carries the position of one shared element to the started Activity. The position of sharedElement will be used as the epicenter for the exit Transition. The position of the shared element in the launched Activity will be the epicenter of its entering Transition." />
      <item value="Observe network changes i.e. Internet Connectivity" />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture. @param refreshing Whether or not the view should show refresh progress." />
      <item value="bind" />
      <item value="along" />
      <item value="Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. When the exit Transition completes, finish() is called. If no entry Transition was used, finish() is called immediately and the Activity exit Transition is run. On Android 4.4 or lower, this method only finishes the Activity with no special exit transition." />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page. To set several display options at once, see the setDisplayOptions methods. Params: showHomeAsUp – true to show the user that selecting home will return one level up rather than to the top level of the app. See Also: setDisplayOptions(int), setDisplayOptions(int, int)" />
      <item value="error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: foodium_posts) public abstract void deleteAllPosts();" />
      <item value="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints" />
      <item value="instantiated:" />
      <item value="The surrounding layout (@layoutactivity_post_details) did not actually include this layout. Remove tools:showIn=... from the root tag. Tip: Try to refresh the layout." />
      <item value="Horizontal bias" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="1905" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1905" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669623435467" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1676700753707" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="RUSSIAN" />
    <option name="targetLanguageSelection" value="LAST" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="start Or Continue Nibp Measuring" />
      <item value="send Simple Command With Delay" />
      <item value="DEVICE WORK DELAY" />
      <item value="m Command Packet Number" />
      <item value="Encrypt Buffer" />
      <item value="offer Last" />
      <item value="update On Nibp Activity" />
      <item value="update On Nibp Mode Changed In Service Mode" />
      <item value="set Current Pressure In Cuff" />
      <item value="TEMPERATURE UNAVAILABLE" />
      <item value="OXI UNAVAILABLE" />
      <item value="NIBP UNAVAILABLE" />
      <item value="BOARD UNAVAILABLE" />
      <item value="Measuring Interrupt Type" />
      <item value="UNDEFINED VALUE STRING" />
      <item value="prepare To Nibp Measuring" />
      <item value="average Value Range" />
      <item value="MEASURING" />
      <item value="Start Nibp Measuring Click" />
      <item value="update Nibp Measuring Button For Currents State" />
      <item value="handle On Set Nibp Pump Power Click" />
      <item value="send Write Nibp Pump Power Settings Command" />
      <item value="handle On Start Nibp Measuring Click" />
      <item value="get Nibp Mode Value" />
      <item value="PREPARING" />
      <item value="COMMAND DISABLE NIBP" />
      <item value="COMMAND ENABLE TEMPER" />
      <item value="Method Alco Data" />
      <item value="Admission" />
      <item value="Unknown" />
      <item value="Useful Data" />
      <item value="parse Useful Data" />
      <item value="set Admission Command" />
      <item value="Packet number for lost" />
      <item value="set Admission Type" />
      <item value="parse Admission" />
      <item value="handle Last Command Send Ok" />
      <item value="Common Packet" />
      <item value="handle Temperature Any Data Received" />
      <item value="C aushort Crc 16 Table" />
      <item value="send Nibp Measuring On Measuring End" />
      <item value="add Nibp Packet Value For Send" />
      <item value="handle Temperature Data Received" />
      <item value="convert To Scaled Temperature In Hundredth Celsius" />
      <item value="REPEAT COMMAND COUNTER DEFAULT" />
      <item value="ENCRYPTION" />
      <item value="MIN FIRMWARE ENCRYPTION" />
      <item value="is Firmware Support Encryption" />
      <item value="m Changes Reverse" />
      <item value="Decrypt Buffer" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="307" />
        <entry key="RUSSIAN" value="307" />
        <entry key="YORUBA" value="1" />
      </map>
    </option>
  </component>
</application>