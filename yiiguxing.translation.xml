<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2007" />
    <option name="newTranslationDialogX" value="375" />
    <option name="newTranslationDialogY" value="1110" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="slider Side" />
      <item value="ensure Fragment" />
      <item value="The fragment if found or null otherwise." />
      <item value="inds a fragment that was identified by the given tag either when inflated from XML or as supplied when added in a transaction. This first searches through fragments that are currently added to the manager's activity; if no such fragment is found, then all fragments currently on the back stack are searched. If provided a null tag, this method returns null. Params: tag – the tag used to search for the fragment Returns: The fragment if found or null otherwise." />
      <item value="Marks the JVM method generated from the annotated function as synchronized, meaning that the method will be protected from concurrent execution by multiple threads by the monitor of the instance (or, for static methods, the class) on which the method is defined." />
      <item value="on Page Change Callback" />
      <item value="Return a private FragmentManager for placing and managing Fragments inside of this Fragment" />
      <item value="Dismiss this dialog, removing it from the screen. This method can be invoked safely from any thread. Note that you should not override this method to do cleanup when the dialog is dismissed, instead implement that in onStop." />
      <item value="java.lang.NullPointerException: null cannot be cast to non-null type com.example.twodialogfragments.MainDialogDto" />
      <item value="null cannot be cast to non-null type com.example.twodialogfragments.MainDialogDto" />
      <item value="Control whether the shown Dialog is cancelable. Use this instead of directly calling Dialog.setCancelable(boolean), because DialogFragment needs to change its behavior based on this" />
      <item value="description" />
      <item value="gone" />
      <item value="hide" />
      <item value="total Value In Rubles" />
      <item value="set Visibility" />
      <item value="set Visability" />
      <item value="Laments" />
      <item value="Connect Error" />
      <item value="Signal Lost" />
      <item value="Not Paired" />
      <item value="Sets whether this dialog is canceled when touched outside the window's bounds. If setting to true, the dialog is set to be cancelable if not already set. Params: cancel – Whether the dialog should be canceled when touched outside the window" />
      <item value="Compaints" />
      <item value="margin" />
      <item value="Exposed Dropdown Menu" />
      <item value="Dense" />
      <item value="value In Rubles" />
      <item value="Vector Drawable Compat" />
      <item value="viewport Height" />
      <item value="viewport Width" />
      <item value="tint" />
      <item value="path" />
      <item value="sub Title" />
      <item value="text Input Layout" />
      <item value="selector" />
      <item value="shape" />
      <item value="shape complaints dialog" />
      <item value="bind Image Resource" />
      <item value="Returns the outermost View in the layout file associated with the Binding. If this binding is for a merge layout file, this will return the first root in the merge tag" />
      <item value="ac device" />
      <item value="state container" />
      <item value="An optional argument to supply a maximum width for this view. See {see android.widget.ImageViewsetMaxWidth} for details. --&gt;" />
      <item value="require Arguments" />
      <item value="Return the arguments supplied when the fragment was instantiated, if any." />
      <item value="Return the arguments supplied when the fragment was instantiated. Throws: IllegalStateException – if no arguments were supplied to the Fragment. See Also: getArguments()" />
      <item value="Inclusive" />
      <item value="pop Up To Inclusive" />
      <item value="destination" />
      <item value="set Main Button Settings" />
      <item value="Use this factory method to create a new instance of this fragment using the provided parameters." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="999" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1000" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1652697504455" />
  </component>
</application>