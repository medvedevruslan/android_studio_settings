<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="708" />
    <option name="newTranslationDialogY" value="973" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="contains" />
      <item value="Fild" />
      <item value="Body Fat-B1" />
      <item value="This class is a Parcelable wrapper around {@link UUID} which is an immutable representation of a 128-bit universally unique identifier." />
      <item value="on Batch Scan Results" />
      <item value="Firmware Ver" />
      <item value="bleFirmwareVer is" />
      <item value="request Firmware Version" />
      <item value="Lollipop" />
      <item value="is Enabled" />
      <item value="&quot;begin to scan bluetooth devices." />
      <item value="&quot;begin to scan bluetooth devices..." />
      <item value="missing udev rules? user is in the plugdev group" />
      <item value="PatchStore::createDisableExceptionQarthFile method fail." />
      <item value="thread Seconder" />
      <item value="Runnable" />
      <item value="lower Case" />
      <item value="is already connected devices.don't do scan operate." />
      <item value="is already connected devices.don't do scan operate" />
      <item value="&quot;is already scan devices.don't scan again" />
      <item value="Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself." />
      <item value="has System Feature" />
      <item value="Sets up UI references." />
      <item value="If there is an active notification on a characteristic, clear it first so it doesn't update the data field on the user interface." />
      <item value="If a given GATT characteristic is selected, check for supported features. This sample demonstrates 'Read' and 'Notify' features. See http:d.android.comreferenceandroidbluetoothBluetoothGatt.html for the complete list of supported characteristic features." />
      <item value="Retrieves a list of supported GATT services on the connected device. This should be invoked only after {@code BluetoothGattdiscoverServices()} completes successfully." />
      <item value="This is specific to Heart Rate Measurement." />
      <item value="If true, enable notification. False otherwise" />
      <item value="Characteristic to act on" />
      <item value="Enables or disables notification on a give characteristic." />
      <item value="The characteristic to read from." />
      <item value="Request a read on a given {@code BluetoothGattCharacteristic}. The read result is reported asynchronously through the {@code BluetoothGattCallbackonCharacteristicRead(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattCharacteristic, int)} callback." />
      <item value="After using a given BLE device, the app must call this method to ensure resources are released properly." />
      <item value="Disconnects an existing connection or cancel a pending connection. The disconnection result is reported asynchronously through the {@code BluetoothGattCallbackonConnectionStateChange(android.bluetooth.BluetoothGatt, int, int)} callback." />
      <item value="BluetoothAdapter not initialized" />
      <item value="After using a given device, you should make sure that BluetoothGatt.close() is called such that resources are cleaned up properly. In this particular example, close() is invoked when the UI is disconnected from the Service." />
      <item value="make Gatt Update Intent Filter" />
      <item value="Link the ListView (superclass) to the expandable list data through the connector" />
      <item value="Set member variable" />
      <item value="999999 is a size in pixels. ExpandableListView requires a maximum height in order to do measurement calculations." />
      <item value="Gets a View that displays the given group. This View is only for the group--the Views for the group's children will be fetched using {@link getChildView(int, int, boolean, View, ViewGroup)}. @param groupPosition the position of the group for which the View is returned @param isExpanded whether the group is expanded or collapsed @param convertView the old view to reuse, if possible. You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. It is not guaranteed that the convertView will have been previously created by {@link getGroupView(int, boolean, View, ViewGroup)}. @param parent the parent that this view will eventually be attached to @return the View corresponding to the group at the specified position" />
      <item value="@param groupPosition the position of the group for which the View is returned" />
      <item value="headers" />
      <item value="get System Service" />
      <item value="color Primary" />
      <item value="convert View" />
      <item value="is Expanded" />
      <item value="has Stable Ids" />
      <item value="no idea why this code is working" />
      <item value="Expand" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="198" />
        <entry key="RUSSIAN" value="197" />
        <entry key="GALICIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1624349949232" />
  </component>
</application>