<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2007" />
    <option name="newTranslationDialogX" value="375" />
    <option name="newTranslationDialogY" value="1110" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="onGetLayoutInflater() cannot be executed until the Fragment is attached to the FragmentManager." />
      <item value="TIME TO ALL MEASURE TIMER" />
      <item value="TIMER TIME TO ALL MEASURE" />
      <item value="millis Future" />
      <item value="apply" />
      <item value="Display the dialog, adding the fragment to the given FragmentManager. This is a convenience for explicitly creating a transaction, adding the fragment to it with the given tag, and committing it. This does not add the transaction to the fragment back stack. When the fragment is dismissed, a new transaction will be executed to remove it from the activity. Params: manager – The FragmentManager this fragment will be added to. tag – The tag for this fragment, as per FragmentTransaction.add." />
      <item value="Display the dialog, adding the fragment to the given FragmentManager. This is a convenience for explicitly creating a transaction, adding the fragment to it with the given tag, and committing it. This does not add the transaction to the fragment back stack. When the fragment is dismissed, a new transaction will be executed to remove it from the activity. Params: manager – The FragmentManager this fragment will be added to. tag – The tag for this fragment, as per" />
      <item value="Type mismatch: inferred type is Bundle? but Bundle was expected" />
      <item value="hide" />
      <item value="Invocation failed Unexpected end of file from server" />
      <item value="Set custom binding" />
      <item value="disable" />
      <item value="disenable" />
      <item value="disenabled" />
      <item value="enabled" />
      <item value="dissenabled" />
      <item value="that accepts parameter type 'android.widget.Button" />
      <item value="If a binding adapter provides the setter, check that the adapter is annotated correctly and that the parameter type matches." />
      <item value="Cannot find a setter for &lt;com.google.android.material.textfield.TextInputLayout app:configEdtTxtContainer&gt; that accepts parameter type 'android.widget.Button'" />
      <item value="build Binding" />
      <item value="Returns the parent Fragment containing this Fragment. If this Fragment is attached directly to an Activity, returns null." />
      <item value="Indicates that the ViewPager2 is in the process of settling to a final position." />
      <item value="Indicates that the ViewPager2 is currently being dragged by the user, or programmatically via fake drag functionality." />
      <item value="Indicates that the ViewPager2 is in an idle, settled state. The current page is fully in view and no animation is in progress." />
      <item value="Called when the scroll state changes. Useful for discovering when the user begins dragging, when a fake drag is started, when the pager is automatically settling to the current page, or when it is fully stoppedidle. state can be one of" />
      <item value="slider Side" />
      <item value="ensure Fragment" />
      <item value="The fragment if found or null otherwise." />
      <item value="inds a fragment that was identified by the given tag either when inflated from XML or as supplied when added in a transaction. This first searches through fragments that are currently added to the manager's activity; if no such fragment is found, then all fragments currently on the back stack are searched. If provided a null tag, this method returns null. Params: tag – the tag used to search for the fragment Returns: The fragment if found or null otherwise." />
      <item value="Marks the JVM method generated from the annotated function as synchronized, meaning that the method will be protected from concurrent execution by multiple threads by the monitor of the instance (or, for static methods, the class) on which the method is defined." />
      <item value="on Page Change Callback" />
      <item value="Return a private FragmentManager for placing and managing Fragments inside of this Fragment" />
      <item value="Dismiss this dialog, removing it from the screen. This method can be invoked safely from any thread. Note that you should not override this method to do cleanup when the dialog is dismissed, instead implement that in onStop." />
      <item value="java.lang.NullPointerException: null cannot be cast to non-null type com.example.twodialogfragments.MainDialogDto" />
      <item value="null cannot be cast to non-null type com.example.twodialogfragments.MainDialogDto" />
      <item value="Control whether the shown Dialog is cancelable. Use this instead of directly calling Dialog.setCancelable(boolean), because DialogFragment needs to change its behavior based on this" />
      <item value="description" />
      <item value="gone" />
      <item value="total Value In Rubles" />
      <item value="set Visibility" />
      <item value="set Visability" />
      <item value="Laments" />
      <item value="Connect Error" />
      <item value="Signal Lost" />
      <item value="Not Paired" />
      <item value="Sets whether this dialog is canceled when touched outside the window's bounds. If setting to true, the dialog is set to be cancelable if not already set. Params: cancel – Whether the dialog should be canceled when touched outside the window" />
      <item value="Compaints" />
      <item value="margin" />
      <item value="Exposed Dropdown Menu" />
      <item value="Dense" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1029" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1029" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1653284130825" />
  </component>
</application>