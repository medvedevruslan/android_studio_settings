<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="682" />
    <option name="newTranslationDialogWidth" value="1989" />
    <option name="newTranslationDialogX" value="5073" />
    <option name="newTranslationDialogY" value="1243" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="on Response Upload Measure Data" />
      <item value="on Response Device Info" />
      <item value="old Com" />
      <item value="all Received Command" />
      <item value="User-defined message code so that the recipient can identify what this message is about. Each Handler has its own name-space for message codes, so you do not need to worry about yours conflicting with other handlers." />
      <item value="reply Mac Address Or Time" />
      <item value="receive Error" />
      <item value="substring" />
      <item value="Returns the element at the specified position in this list. Params: index – index of the element to return Returns: the element at the specified position in this list Throws: IndexOutOfBoundsException – if the index is out of range (index &lt; 0 || index &gt;= size())" />
      <item value="成功寫出" />
      <item value="Write characteristic without requiring a response by the remote device" />
      <item value="WRITE_TYPE_NO_RESPONSE or" />
      <item value="Set the write type for this characteristic Setting the write type of a characteristic determines how the BluetoothGatt.writeCharacteristic function write this characteristic. Params: writeType – The write type to for this characteristic. Can be one of: WRITE_TYPE_DEFAULT, WRITE_TYPE_NO_RESPONSE or WRITE_TYPE_SIGNED." />
      <item value="access modifiers changed from: protected" />
      <item value="split Task" />
      <item value="parse Task Between Measure And Send Request" />
      <item value="parse Task Beyond Measure And Send Request" />
      <item value="UPLOAD MEASURE DATA" />
      <item value="SEND REQUEST" />
      <item value="ambient Temperature" />
      <item value="the number of values buffered in addition to replay." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
      <item value="Creates a flow that produces values from the specified vararg-arguments." />
      <item value="Implementation note: this is just an &quot;optimized&quot; overload of flowOf(vararg) which significantly reduces the footprint of widespread single-value flows." />
      <item value="Creates a flow that produces the given value." />
      <item value="allocated" />
      <item value="private val dataBase: DataBase = DataBase, private val refreshIntervalMs: Long = 1000" />
      <item value="source" />
      <item value="Network Bound Repository" />
      <item value="remote Posts" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty" />
      <item value="fold" />
      <item value="predicate" />
      <item value="The terminal operator that returns the first element emitted by the flow and then cancels flow's collection. Throws NoSuchElementException if the flow was empty." />
      <item value="Emit Database content first" />
      <item value="save Remote Data" />
      <item value="@MainThread public void onBackPressed() Trigger a call to the currently added callbacks in reverse order in which they were added. Only if the most recently added callback is not enabled will any previously added callback be called. If hasEnabledCallbacks() is false when this method is called, the fallback Runnable set by the constructor will be triggered. androidx.activity.OnBackPressedDispatcher Gradle: androidx.activity:activity:1.5.1@aar (classes.jar)" />
      <item value="Create an ActivityOptions to transition between Activities using cross-Activity scene animations. This method carries the position of one shared element to the started Activity. The position of sharedElement will be used as the epicenter for the exit Transition. The position of the shared element in the launched Activity will be the epicenter of its entering Transition." />
      <item value="Observe network changes i.e. Internet Connectivity" />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture. @param refreshing Whether or not the view should show refresh progress." />
      <item value="bind" />
      <item value="along" />
      <item value="Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. When the exit Transition completes, finish() is called. If no entry Transition was used, finish() is called immediately and the Activity exit Transition is run. On Android 4.4 or lower, this method only finishes the Activity with no special exit transition." />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page. To set several display options at once, see the setDisplayOptions methods. Params: showHomeAsUp – true to show the user that selecting home will return one level up rather than to the top level of the app. See Also: setDisplayOptions(int), setDisplayOptions(int, int)" />
      <item value="error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: foodium_posts) public abstract void deleteAllPosts();" />
      <item value="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints" />
      <item value="instantiated:" />
      <item value="The surrounding layout (@layoutactivity_post_details) did not actually include this layout. Remove tools:showIn=... from the root tag. Tip: Try to refresh the layout." />
      <item value="Horizontal bias" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="1905" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1905" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669623435467" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1684129445028" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="RUSSIAN" />
    <option name="targetLanguageSelection" value="LAST" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="381" />
    <option name="newTranslationDialogWidth" value="772" />
    <option name="newTranslationDialogX" value="574" />
    <option name="newTranslationDialogY" value="1288" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="This inspection is not compatible with languages that require third-party formatters for code formatting, for example, Go or C with CLangFormat enabled." />
      <item value="Reports formatting issues that appear if your code doesn't follow your project's code style settings." />
      <item value="To get local formatting use getDateInstance(), getDateTimeInstance(), or getTimeInstance(), or use new SimpleDateFormat(String template, Locale locale) with for example Locale.US for ASCII dates. To get local formatting use getDateInstance(), getDateTimeInstance(), or getTimeInstance(), or use new SimpleDateFormat(String template, Locale locale) with for example Locale.US for ASCII dates." />
      <item value="Returns the day of the month represented by this Date object. The value returned is between 1 and 31 representing the day of the month that contains or begins with the instant in time represented by this Date object, as interpreted in the local time zone." />
      <item value="Specify the orientation an activity should be run in. If not specified, it will run in the current preferred orientation of the screen" />
      <item value="invalid grant" />
      <item value="response" />
      <item value="Constant to return from onStartCommand: if this service's process is killed while it is started (after returning from onStartCommand), then it will be scheduled for a restart and the last delivered Intent re-delivered to it again via onStartCommand. This Intent will remain scheduled for redelivery until the service calls stopSelf(int) with the start ID provided to onStartCommand. The service will not receive a onStartCommand(Intent, int, int) call with a null Intent because it will only be restarted if it is not finished processing all Intents sent to it (and any such pending events will be delivered at the point of restart)." />
      <item value="caption result" />
      <item value="Added a class that contains all the visibility flags for each MeasurementFragment layout widget" />
      <item value="Добавлен класс, в котором содержатся все флаги видимости для каждого виджета макетов MeasurementFragment" />
      <item value="preliminary Data" />
      <item value="android:content Description=&quot;@stringend tests&quot;" />
      <item value="This item may not have a label readable by screen readers." />
      <item value="content Description" />
      <item value="Get Float Test Result From Checkup In Db Use Case" />
      <item value="NOTE: Do not place your application dependencies here; they belong in the individual module build.gradle files" />
      <item value="timer Measurement" />
      <item value="timer Measurement Handler" />
      <item value="round Off" />
      <item value="to old ns" />
      <item value="app: 'annotationProcessor' dependencies won't be recognized as kapt annotation processors. Please change the configuration name to 'kapt' for these artifacts: 'com.github.bumptech.glide:compiler:4.9.0'." />
      <item value="It will be removed at the end of 2019." />
      <item value="Instructs the Kotlin compiler to generate overloads for this function that substitute default parameter values. If a method has N parameters and M of which have default values, M overloads are generated: the first one takes N-1 parameters (all but the last one that takes a default value), the second takes N-2 parameters, and so on." />
      <item value="scan Is Started" />
      <item value="timer Is Started" />
      <item value="timer is over" />
      <item value="to Start Timer" />
      <item value="set Both Command" />
      <item value="start Measurement" />
      <item value="action On Command From Intent" />
      <item value="action On Command" />
      <item value="flag When Fragment Destroyed Without Callback Set" />
      <item value="Returns the first element matching the given predicate. Throws: NoSuchElementException - if no such element is found." />
      <item value="nested Fragment" />
      <item value="Returns a list containing the results of applying the given transform function to each element in the original collection. Samples: samples.collections.Collections.Transformations.map Unresolved" />
      <item value="fragment Types Collection" />
      <item value="flag Is Registered Broadcast" />
      <item value="Interruption" />
      <item value="state After Timer Expire" />
      <item value="set State After Timer Expire" />
      <item value="mutable Size" />
      <item value="if App Error Handler" />
      <item value="on App Error Handle" />
      <item value="confirmation Ui Is Displayed" />
      <item value="Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key." />
      <item value="blank" />
      <item value="Error dialog fragment that should show. Leave blank if not needed" />
      <item value="regular State" />
      <item value="Sets the callback that will be called if a key is dispatched to the dialog." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3" />
        <entry key="DUTCH" value="1" />
        <entry key="ENGLISH" value="689" />
        <entry key="RUSSIAN" value="689" />
        <entry key="YORUBA" value="1" />
      </map>
    </option>
  </component>
</application>