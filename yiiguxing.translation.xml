<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="2011" />
    <option name="newTranslationDialogX" value="375" />
    <option name="newTranslationDialogY" value="1110" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Returns the outermost View in the layout file associated with the Binding. If this binding is for a merge layout file, this will return the first root in the merge tag" />
      <item value="ac device" />
      <item value="state container" />
      <item value="An optional argument to supply a maximum width for this view. See {see android.widget.ImageViewsetMaxWidth} for details. --&gt;" />
      <item value="require Arguments" />
      <item value="Return the arguments supplied when the fragment was instantiated, if any." />
      <item value="Return the arguments supplied when the fragment was instantiated. Throws: IllegalStateException – if no arguments were supplied to the Fragment. See Also: getArguments()" />
      <item value="Inclusive" />
      <item value="pop Up To Inclusive" />
      <item value="destination" />
      <item value="set Main Button Settings" />
      <item value="Use this factory method to create a new instance of this fragment using the provided parameters." />
      <item value="put" />
      <item value="put String" />
      <item value="The event used to trigger changes. This is used in BindingAdapters for the data binding system to set the event listener when two-way binding is used." />
      <item value="The attribute that the value is to be retrieved for." />
      <item value="Like BindingAdapters, InverseBindingAdapter methods may also take androidx.databinding.DataBindingComponent as the first parameter and may be an instance method with the instance retrieved from the DataBindingComponent." />
      <item value="unused" />
      <item value="update Tv And Dr Button" />
      <item value="service Result Observer" />
      <item value="invoke" />
      <item value="Tries" />
      <item value="Template" />
      <item value="Template Fragment" />
      <item value="Alternate constructor that can be used to provide a default layout that will be inflated as part of super.onCreate(savedInstanceState). This should generally be called from your constructor that takes no parameters, as is required for API 27 and lower or when using the default android.app.AppComponentFactory. See Also: AppCompatActivity()" />
      <item value="is Granted" />
      <item value="is Should Show Request Permission Rationale" />
      <item value="Returns an array containing the specified elements." />
      <item value="is attempting to registerForActivityResult after being created. Fragments must call registerForActivityResult() before they are created (i.e. initialization, onAttach(), or onCreate())." />
      <item value="Fragment PermissionTestFragment{33b99b5} (f587aa38-fe78-4c3f-b5e5-f66d6bc08850 id=0x7f08012f) is attempting to registerForActivityResult after being created. Fragments must call registerForActivityResult() before they are created (i.e. initialization, onAttach(), or onCreate())." />
      <item value="Executes an ActivityResultContract. This method throws android.content.ActivityNotFoundException if there was no Activity found to run the given Intent. Params: input – the input required to execute an ActivityResultContract. Throws: android.content.ActivityNotFoundException" />
      <item value="If set, this activity will become the start of a new task on this history stack. A task (from the activity that started it to the next task activity) defines an atomic group of activities that the user can move to. Tasks can be moved to the foreground and background; all of the activities inside of a particular task always remain in the same order. See Tasks and Back Stack for more information about tasks. This flag is generally used by activities that want to present a &quot;launcher&quot; style behavior: they give the user a list of separate things that can be done, which otherwise run completely independently of the activity launching them. When using this flag, if a task is already running for the activity you are now starting, then a new activity will not be started; instead, the current task will simply be brought to the front of the screen with the state it was last in. See FLAG_ACTIVITY_MULTIPLE_TASK for a flag to disable this behavior." />
      <item value="If set, this activity will become the start of a new task on this history stack. A task (from the activity that started it to the next task activity) defines an atomic group of activities that the user can move to. Tasks can be moved to the foreground and background; all of the activities inside of a particular task always remain in the same order. See Tasks and Back Stack for more information about tasks. This flag is generally used by activities that want to present a &quot;launcher&quot; style behavior: they give the user a list of separate things that can be done, which otherwise run completely independently of the activity launching them. When using this flag, if a task is already running for the activity you are now starting, then a new activity will not be started; instead, the current task will simply be brought to the front of the screen with the state it was last in. See FLAG_ACTIVITY_MULTIPLE_TASK for a flag to disable this behavior. This flag can not be used when the caller is requesting a result from the activity being launched." />
      <item value="Request Multiple Permissions" />
      <item value="which" />
      <item value="Requests permissions to be granted to this application. These permissions must be requested in your manifest, they should not be granted to your app, and they should have protection level dangerous, regardless whether they are declared by the platform or a third-party app" />
      <item value="item" />
      <item value="Returns a MutableSet of all keyvalue pairs in this map." />
      <item value="Returns a typed array containing all of the elements of this collection. Allocates an array of runtime type T having its size equal to the size of this collection and populates the array with the elements of this collection" />
      <item value="Attempts to pop the controller's back stack. Analogous to when the user presses the system Back button when the associated navigation host has focus. Returns: true if the stack was popped and the user has been navigated to another destination, false otherwise" />
      <item value="@param requestCode Application specific request code to match with a result reported to {@link OnRequestPermissionsResultCallbackonRequestPermissionsResult(int, String[], int[])}. Should be &gt;= 0." />
      <item value="Requests permissions to be granted to this application. These permissions must be requested in your manifest, they should not be granted to your app, and they should have protection level dangerous, regardless whether they are declared by the platform or a third-party app." />
      <item value="Permissions Request Code" />
      <item value="Find the first denied permission" />
      <item value="shape complaints dialog" />
      <item value="An ActivityResultContract to request a permission" />
      <item value="denied Permission" />
      <item value="Returns a typed array containing all of the elements of this collection. Allocates an array of runtime type T having its size equal to the size of this collection and populates the array with the elements of this collection." />
      <item value="Should show an explanation" />
      <item value="Receive the permissions request result" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="962" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="963" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1652264423991" />
  </component>
</application>