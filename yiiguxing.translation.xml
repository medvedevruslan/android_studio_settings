<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="626" />
    <option name="newTranslationDialogWidth" value="1991" />
    <option name="newTranslationDialogX" value="5005" />
    <option name="newTranslationDialogY" value="1307" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="convert Measurement Text To Display" />
      <item value="convert Measurement To Text Display" />
      <item value="condition Color Value On Display" />
      <item value="get Color Depending Of Value And Bounds" />
      <item value="Cancels [Job] of this context with an optional cancellation cause. See [Job.cancel] for details." />
      <item value="stop Scan Before Connect Device" />
      <item value="Cancels this scope, including its job and all its children with an optional cancellation [cause]. A cause can be used to specify an error message or to provide other details on a cancellation reason for debugging purposes. Throws [IllegalStateException] if the scope does not have a job in it." />
      <item value="Old version of {@link stopSelfResult} that doesn't return a result." />
      <item value="Stop the service, if it was previously started. This is the same as calling {@link android.content.ContextstopService} for this particular service." />
      <item value="Returns an array of type UByteArray, which is a copy of this array where each element is an unsigned reinterpretation of the corresponding element of this array." />
      <item value="as" />
      <item value="combine Measurement To Text" />
      <item value="combine Measure To Text" />
      <item value="Bounds" />
      <item value="get Color Depending Of Values" />
      <item value="get Color Dependence Of Value" />
      <item value="Template Fragment" />
      <item value="range" />
      <item value="Ambit" />
      <item value="Clears the content of this string builder making it empty and returns this instance." />
      <item value="for Do Not Work With Writed Characteristic" />
      <item value="for Do Not Work With Write Characteristic" />
      <item value="for Do Not Work With Same Characteristic" />
      <item value="Returns this value." />
      <item value="Parcel" />
      <item value="The property annotated with [IgnoredOnParcel] will not be stored into parcel." />
      <item value="Returns the substring of this string starting at the [startIndex] and ending right before the [endIndex]." />
      <item value="inflater" />
      <item value="Inflater" />
      <item value="@param replay the number of values replayed to new subscribers (cannot be negative, defaults to zero)." />
      <item value="Returns a flow that switches to a new flow produced by transform function every time the original flow emits a value. When the original flow emits a new value, the previous flow produced by transform block is cancelled." />
      <item value="A coroutine dispatcher that is not confined to any specific thread. It executes initial continuation of the coroutine in the current call-frame and lets the coroutine resume in whatever thread that is used by the corresponding suspending function, without mandating any specific threading policy. Nested coroutines launched in this dispatcher form an event-loop to avoid stack overflows." />
      <item value="The default [CoroutineDispatcher] that is used by all standard builders like [launch][CoroutineScope.launch], [async][CoroutineScope.async], etc. if no dispatcher nor any other [ContinuationInterceptor] is specified in their context." />
      <item value="A coroutine dispatcher that is confined to the Main thread operating with UI objects. This dispatcher can be used either directly or via [MainScope] factory. Usually such dispatcher is single-threaded." />
      <item value="txt Input Layout Config" />
      <item value="Is set when VH is bound from the adapter and cleaned right before it is sent to RecyclerView.RecycledViewPool." />
      <item value="on Create View Holder" />
      <item value="require Value" />
      <item value="The base class for all errors and exceptions. Only instances of this class can be thrown or caught." />
      <item value="Throwable" />
      <item value="cause" />
      <item value="A collection that holds pairs of objects (keys and values) and supports efficiently retrieving the value corresponding to each key. Map keys are unique; the map holds only one value for each key. Methods in this interface support only read-only access to the map; read-write access is supported through the MutableMap interface." />
      <item value="hide Up Button" />
      <item value="Retrieve a reference to this activity's ActionBar." />
      <item value="whether" />
      <item value="Set whether home should be displayed as an &quot;up&quot; affordance. Set this to true if selecting &quot;home&quot; returns up by a single level in your UI rather than back to the top level or front page." />
      <item value="Implement price variation system" />
      <item value="Drop the latest value that is being added to the buffer right now on buffer overflow (so that buffer contents stay the same), do not suspend." />
      <item value="Drop the oldest value in the buffer on overflow, add the new value to the buffer, do not suspend." />
      <item value="Suspend on buffer overflow." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="1751" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1751" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="SUNDANESE" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1666779792762" />
  </component>
</application>