<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="708" />
    <option name="newTranslationDialogY" value="973" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="This is the interface for text that has markup objects attached to ranges of it. Not all text classes have mutable markup or text; see {@link Spannable} for mutable markup and {@link Editable} for mutable text." />
      <item value="ooks like you've changed schema but forgot to update the version number. You can simply fix this by increasing the version number." />
      <item value="get Main Looper" />
      <item value="post Delayed" />
      <item value="бесконечный цикл" />
      <item value="Indicates this network uses a Cellular transport." />
      <item value="Returns details about the currently active default data network. When connected, this network is the default route for outgoing connections. You should always check {@link NetworkInfoisConnected()} before initiating network traffic. This may return {@code null} when there is no default network. Note that if the default network is a VPN, this method will return the NetworkInfo for one of its underlying networks instead, or null if the VPN agent did not specify any. Apps interested in learning about VPNs should use {@link getNetworkInfo(android.net.Network)} instead. @return a {@link NetworkInfo} object for the current default network or {@code null} if no default network is currently active" />
      <item value="Server" />
      <item value="send" />
      <item value="send Packages To Server" />
      <item value="apply" />
      <item value="Specifies that an additional static method needs to be generated from this element if it's a function. If this element is a property, additional static gettersetter methods should be generated. See the [Kotlin language documentation](https:kotlinlang.orgdocsreferencejava-to-kotlin-interop.htmlstatic-methods) for more information." />
      <item value="on Response" />
      <item value="Caused by: java.lang.IllegalArgumentException: Cannot serialize Kotlin type com.example.apitest.MeasurePacket. Reflective serialization of Kotlin classes without using kotlin-reflect has undefined and unexpected behavior. Please use KotlinJsonAdapterFactory from the moshi-kotlin artifact or use code gen from the moshi-kotlin-codegen artifact." />
      <item value="updatejson" />
      <item value="Simple Date Format" />
      <item value="get Scaled Scroll Factor" />
      <item value="lower Preassure" />
      <item value="@Query(&quot;lowerPreassure&quot;) lowerPreassure: Int," />
      <item value="Static Field Leak" />
      <item value="Returns a string obtained by concatenating this string with the string representation of the given [other] object." />
      <item value="Message" />
      <item value="Message(" />
      <item value="send Message" />
      <item value="public final void removeMessages(int what) { throw new RuntimeException(&quot;Stub!&quot;); }" />
      <item value="DNetworkSecurityConfig: No Network Security Config specified, using platform default" />
      <item value="enqueue" />
      <item value="Overview" />
      <item value="api Interface.get User Statistics(driver Id).enqueue" />
      <item value="roidx.lifecycle.View Model" />
      <item value="Copyright 2018 The Android Open Source Project Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at" />
      <item value="Caused by: java.lang.IllegalArgumentException: URL &quot;statistics{userId}&quot; does not contain &quot;{userGuid}&quot;. (parameter 1)" />
      <item value="Unable to create converter for java.util.List&lt;lord.main.linear_pre_trip_control.server_connect.PacketMeasurements&gt;" />
      <item value="Marks declarations in the coroutines that are delicate &amp;mdash; they have limited use-case and shall be used with care in general code. Any use of a delicate declaration has to be carefully reviewed to make sure it is properly used and does not create problems like memory and resource leaks. Carefully read documentation of any declaration marked as `DelicateCoroutinesApi`." />
      <item value="An annotation that indicates this member should be serialized to JSON with the provided name value as its field name." />
      <item value="response" />
      <item value="is Successful" />
      <item value="!response.is Successful" />
      <item value="SHOW ALL" />
      <item value="SHOW BUY" />
      <item value="SHOW RENT" />
      <item value="Gets filtered Mars real estate property information from the Mars API Retrofit service and updates the [MarsProperty] [List] and [MarsApiStatus] [LiveData]. The Retrofit service returns a coroutine Deferred, which we await to get the result of the transaction. @param filter the [MarsApiFilter] that is sent as part of the web server request" />
      <item value="Create an implementation of the API endpoints defined by the {@code service} interface." />
      <item value="suspend" />
      <item value="get Mars Real Estate Properties" />
      <item value="This binding adapter displays the [MarsApiStatus] of the network request in an image view. When the request is loading, it displays a loading_animation. If the request has an error, it displays a broken image to reflect the connection error. When the request is finished, it hides the image view." />
      <item value="interceptor" />
      <item value="Istance" />
      <item value="m Istance" />
      <item value="RecyclerView can perform several optimizations if it can know in advance that RecyclerView's size is not affected by the adapter contents. RecyclerView can still change its size based on other factors (e.g. its parent's size) but this size calculation cannot depend on the size of its children or contents of its adapter (except the number of items in the adapter). &lt;p&gt; If your use of RecyclerView falls into this category, set this to {@code true}. It will allow RecyclerView to avoid invalidating the whole layout when its adapter contents change. @param hasFixedSize true if adapter changes cannot affect the size of the RecyclerView." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="200" />
        <entry key="RUSSIAN" value="199" />
        <entry key="GALICIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1631510510992" />
  </component>
</application>